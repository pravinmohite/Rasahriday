{"version":3,"sources":["./src/app/admin-panel/admin-panel-routing.module.ts","./src/app/admin-panel/admin-panel.module.ts","./src/app/admin-panel/interview-questions-panel/interview-questions-panel.component.ts","./src/app/admin-panel/interview-questions-panel/interview-questions-panel.component.html","./src/app/admin-panel/login/login.component.ts","./src/app/admin-panel/login/login.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.ts","./src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.html","./src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component.ts","./src/app/interview-questions/angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.ts","./src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.html","./src/app/interview-questions/interview-questions-routing.module.ts","./src/app/interview-questions/interview-questions.module.ts","./src/app/services/address/address.service.ts"],"names":[],"mappings":"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","file":"admin-panel-admin-panel-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { InterviewQuestionsPanelComponent } from './interview-questions-panel/interview-questions-panel.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:LoginComponent\r\n  },\r\n  {\r\n    path: 'updateInterviewQuestions',\r\n    component: InterviewQuestionsPanelComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminPanelRoutingModule } from './admin-panel-routing.module';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { InterviewQuestionsModule } from '../interview-questions/interview-questions.module';\r\nimport { InterviewQuestionsPanelComponent } from './interview-questions-panel/interview-questions-panel.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  InterviewQuestionsPanelComponent,\r\n  LoginComponent\r\n ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AdminPanelRoutingModule,\r\n    FontAwesomeModule,\r\n    InterviewQuestionsModule\r\n  ],\r\n})\r\nexport class AdminPanelModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {QuestionAnswerService} from '../../services/question-answer-service/question-answer.service';\r\nimport { Router } from '@angular/router';\r\nimport {LoaderService} from './../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-interview-questions-panel',\r\n  templateUrl: './interview-questions-panel.component.html',\r\n  styleUrls: ['./interview-questions-panel.component.scss']\r\n})\r\nexport class InterviewQuestionsPanelComponent implements OnInit {\r\n\r\n  questionAnswerList:any;\r\n  constructor(private questionAnswerService:QuestionAnswerService,private router:Router,private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn')==\"true\") {\r\n      this.questionAnswerService.currentData.subscribe((data)=>{\r\n      this.questionAnswerList=data;\r\n      this.loaderService.display(false);\r\n     })\r\n     this.questionAnswerService.getQuestionAnswerList();\r\n   }\r\n   else {\r\n     this.router.navigateByUrl('/admin-panel');\r\n   }\r\n  }\r\n}\r\n","<app-question-answer-panel [questionAnswerList]=\"questionAnswerList\" [adminMode]=true></app-question-answer-panel>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {QuestionAnswerService} from '../../services/question-answer-service/question-answer.service';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product-service/product.service';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { CommonService } from 'src/app/services/common-service/common.service';\r\nimport { AddressService } from 'src/app/services/address/address.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isSignUpMode = false;\r\n  faArrowRight = faArrowRight;\r\n  public isPractitioner: boolean;\r\n  login:any={username: \"\", password: \"\", regNumber: \"\", firstName: \"\", lastName: \"\" , isPractitioner: false};\r\n  public states = [];\r\n\r\n  constructor(\r\n    private productService :ProductService,\r\n    private commonService: CommonService,\r\n    private router:Router,\r\n    private addressService: AddressService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.states = this.addressService.getStateList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn')==\"true\") {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  \r\n  loginToApplication(form:any) {\r\n    if (this.isSignUpMode && this.login.isPractitioner && !this.login.regNumber) {\r\n   \r\n      return;\r\n    }\r\n    if(this.isSignUpMode) {\r\n       this.signUpUser();\r\n    }\r\n    else {\r\n       this.validateLoginDetails();\r\n    }\r\n  }\r\n\r\n  signUpUser() {\r\n     this.productService.signUpUser(this.login).subscribe(data=>{\r\n        \r\n        this.validateLoginDetails();\r\n     })\r\n  }\r\n  updatePractitionerStatus(event: Event) {\r\n    const checkbox = event.target as HTMLInputElement;\r\n    this.login.isPractitioner = checkbox.checked;\r\n  }\r\n  \r\n  setPrivilegesOfUser(data) {\r\n    if(data['isAdmin']) {\r\n      localStorage.setItem('loggedIn','true');\r\n      localStorage.setItem('isAdmin','true');\r\n      this.setLoggedInUserDetails(data);\r\n      this.router.navigateByUrl('/home');\r\n   }\r\n   else if(data) {\r\n     localStorage.setItem('loggedIn','true');\r\n     localStorage.setItem('isAdmin','false');\r\n     this.setLoggedInUserDetails(data);\r\n     this.router.navigateByUrl('/home');\r\n   }\r\n   else {\r\n     localStorage.removeItem('loggedIn');\r\n     localStorage.removeItem('isAdmin');\r\n     this.removeUserDetails();\r\n     alert('invalid user, please enter correct username or password');\r\n   }\r\n  }\r\n\r\n  removeUserDetails(){\r\n    this.commonService.removeUserDetails();\r\n  }\r\n \r\n  setLoggedInUserDetails(userDetails) {\r\n    const formattedUserDetails ={\r\n      userName: userDetails.username,\r\n      firstName: userDetails.firstName, //new\r\n      middleName: userDetails.middleName, //new\r\n      lastName: userDetails.lastName, //new\r\n      address: userDetails.address,\r\n      city: userDetails.city,\r\n      state: userDetails.state,\r\n      pincode: userDetails.pincode,\r\n      isPractitioner: userDetails.isPractitioner,\r\n      regNumber: userDetails.regNumber,\r\n      phoneNumber: userDetails.phoneNumber,\r\n      isAdmin: userDetails.isAdmin,\r\n      _id: userDetails._id\r\n    }\r\n    this.commonService.setUserDetails(formattedUserDetails);\r\n  }\r\n\r\n  validateLoginDetails() {\r\n    this.productService.validateLoginDetails(this.login).subscribe(data=>{\r\n       if(data && data['invalidUser']) {\r\n         alert('incorrect credentials');\r\n       }\r\n       else {\r\n         this.setPrivilegesOfUser(data);\r\n       }\r\n     })\r\n  }\r\n\r\n  keyPressEvent(event) {\r\n    if(event.keyCode==13) {\r\n      this.validateLoginDetails();\r\n    }\r\n  }\r\n  keyPressEventForCharacter(event: KeyboardEvent): void {\r\n    const charCode = event.charCode || event.keyCode;\r\n    const char = String.fromCharCode(charCode);\r\n\r\n    if (!/^[a-zA-Z]*$/.test(char) && charCode !== 8) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  setSignUpMode() {\r\n    this.isSignUpMode = true;\r\n  }\r\n\r\n  setLoginMode() {\r\n    this.isSignUpMode = false;\r\n  }\r\n}\r\n","<div class=\"login-panel-container\" [ngClass]=\"{registrationBox:isSignUpMode}\">\r\n\r\n    <form #userForm=\"ngForm\" novalidate>\r\n        <legend class=\"login-register\" *ngIf=\"!isSignUpMode\">Login:</legend>\r\n        <legend class=\"login-register\" *ngIf=\"isSignUpMode\">Register:</legend>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Practitioner?</label>\r\n            <div class=\"col-9\">\r\n                <!-- this event is removed, (onchange)=\"login.isPractitioner = !login.isPractitioner\" -->\r\n                <input name=\"isPractitioner\" [(ngModel)]=\"login.isPractitioner\" (change)=\"updatePractitionerStatus($event)\"  type=\"checkbox\"\r\n                    class=\"form-control justify-content-start practicener-checkbox\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode && login.isPractitioner\">\r\n            <label for=\"username\" class=\"col-3 col-form-label required\">Registration Number</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"regNumber\" name=\"regNumber\" [(ngModel)]=\"login.regNumber\"\r\n                    placeholder=\"Enter your Registration Number\" (keypress)=\"keyPressEvent($event)\" type=\"text\"\r\n                    class=\"form-control\" #regNumber=\"ngModel\"\r\n                    [ngClass]=\"{'is-invalid': regNumber.invalid  && (regNumber.touched || userForm.submitted)}\"\r\n                    [required]=\"login.isPractitioner\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row field-container\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Username</label>\r\n\r\n            <div class=\"col-9\">\r\n                <input id=\"username\" name=\"username\" [(ngModel)]=\"login.username\" placeholder=\"Enter your username\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\">\r\n            <label for=\"password\" class=\"col-3 col-form-label\">Password</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"password\" name=\"password\" [(ngModel)]=\"login.password\" (keypress)=\"keyPressEvent($event)\"\r\n                    placeholder=\"Enter your password\" type=\"password\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"password\" class=\"col-3 col-form-label\">Confirm Password</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"login.confirmPassword\"\r\n                    (keypress)=\"keyPressEvent($event)\" placeholder=\"Enter your password\" type=\"password\"\r\n                    class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <!----------------------------- full name ------------------- -->\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label class=\"col-3 col-form-label required\">Full Name</label>\r\n            <div class=\"col-9 full-name-box\">\r\n\r\n                <div class=\"col-md-4 col-12 firstNameField\">\r\n                    <input id=\"firstName\" name=\"firstName\" [(ngModel)]=\"login.firstName\"\r\n                        (keypress)=\"keyPressEventForCharacter($event)\" placeholder=\"Enter your first name\" type=\"text\"\r\n                        class=\"form-control\" #firstNameInput=\"ngModel\"\r\n                        [ngClass]=\"{'is-invalid': firstNameInput.invalid  && (firstNameInput.touched || userForm.submitted)}\"\r\n                        required>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 firstNameField middleName\">\r\n                    <input id=\"middleName\" name=\"middleName\" [(ngModel)]=\"login.middleName\"\r\n                        (keypress)=\"keyPressEventForCharacter($event)\" placeholder=\"Enter your middle name\" type=\"text\"\r\n                        class=\"form-control\" required=\"required\">\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 firstNameField\">\r\n                    <input id=\"lastName\" name=\"lastName\" [(ngModel)]=\"login.lastName\"\r\n                        (keypress)=\"keyPressEventForCharacter($event)\" placeholder=\"Enter your last name\" type=\"text\"\r\n                        class=\"form-control\" required=\"required\" #lastNameInput=\"ngModel\"\r\n                        [ngClass]=\"{'is-invalid': lastNameInput.invalid && (lastNameInput.touched || userForm.submitted)}\"\r\n                        required>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Phone Number</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"phoneNumber\" name=\"phoneNumber\" [(ngModel)]=\"login.phoneNumber\"\r\n                    placeholder=\"Enter your Phone Number\" (keypress)=\"keyPressEvent($event)\" type=\"text\"\r\n                    class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Address</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"address\" name=\"address\" [(ngModel)]=\"login.address\" placeholder=\"Enter your address\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">City</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"city\" name=\"city\" [(ngModel)]=\"login.city\" placeholder=\"Enter your City\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">State</label>\r\n            <div class=\"col-9\">\r\n                <select [(ngModel)]=\"login.state\" aria-placeholder=\"Select State\" (onchange)=\"keyPressEvent($event)\"\r\n                    class=\"form-control\" required=\"required\">\r\n                    <option *ngFor=\"let state of states\" [value]=\"state?.label\">{{state?.label}}</option>\r\n                </select>\r\n                <!-- <input id=\"state\" name=\"state\" [(ngModel)]=\"login.state\" placeholder=\"Enter your state\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\"> -->\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Pincode</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"pincode\" name=\"pincode\" [(ngModel)]=\"login.pincode\" placeholder=\"Enter your Pincode\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n            <div class=\"offset-3 col-9 action-btns\">\r\n                <button name=\"submit\" type=\"submit\" class=\"btn btn-outline-customsecondary submit-btn\"\r\n                    (click)=\"loginToApplication(userForm)\">Submit</button>\r\n                <button *ngIf=\"!isSignUpMode\" class=\"btn btn-outline login-btn\"\r\n                    (click)=\"setSignUpMode()\">Register</button>\r\n                <button *ngIf=\"isSignUpMode\" class=\"btn btn-outline login-btn\" (click)=\"setLoginMode()\">Login</button>\r\n                <!-- <a class=\"switch-mode\" *ngIf=\"!isSignUpMode\" href=\"javascript:void(0)\" (click)=\"setSignUpMode()\">Register <fa-icon class=\"hand-cursor edit-icon arrowright-icon\" [icon]=\"faArrowRight\"></fa-icon></a>\r\n            <a class=\"switch-mode\" *ngIf=\"isSignUpMode\" href=\"javascript:void(0)\" (click)=\"setLoginMode()\">Login <fa-icon class=\"hand-cursor edit-icon arrowright-icon\" [icon]=\"faArrowRight\"></fa-icon></a> -->\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n\r\n\r\n<i class=\"fa-light fa-arrow-right\"></i>\r\n\r\n\r\n","import { Component, Input, OnInit, Output } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\nimport {QuestionAnswerService} from \"../../../services/question-answer-service/question-answer.service\";\r\nimport {LoaderService} from './../../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-interview-questions',\r\n  templateUrl: './add-edit-interview-questions.component.html',\r\n  styleUrls: ['./add-edit-interview-questions.component.scss']\r\n})\r\nexport class AddEditInterviewQuestionsComponent implements OnInit {\r\n\r\n  questionTypes:any;\r\n  interviewQuestion:any={question:'',answer:'',rank:''};\r\n  @Input() editedItem;\r\n  editMode:Boolean=true;\r\n  @Output() popupEvent=new EventEmitter();\r\n  constructor(private questionAnswerService:QuestionAnswerService,private loaderService:LoaderService) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(Object.keys(this.editedItem).length === 0 && this.editedItem.constructor === Object) \r\n      this.editMode=false;\r\n    this.interviewQuestion=JSON.parse(JSON.stringify(this.editedItem));\r\n    this.getQuestionTypes();\r\n  }\r\n  getQuestionTypes(){\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(response=>{\r\n      this.questionTypes=response;\r\n      this.loaderService.display(false);\r\n    });\r\n  }\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionAnswerPopup');\r\n  }\r\n  saveInterviewQuestionAnswer() {\r\n    if(this.editMode) {\r\n      this.questionAnswerService.updateQuestionAnswer(this.interviewQuestion);\r\n    }\r\n    else {\r\n      this.questionAnswerService.addQuestionAnswer(this.interviewQuestion);\r\n    }\r\n    this.closeAddEditPopup();\r\n  }\r\n\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content\"> \r\n        <div>\r\n         <fieldset>\r\n          <legend>Add question and answer:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-3 col-form-label\">Question</label> \r\n            <div class=\"col-9\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.question\" placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"answer\" class=\"col-3 col-form-label\">Answer</label> \r\n            <div class=\"col-9\">\r\n              <textarea id=\"answer\" [(ngModel)]=\"interviewQuestion.answer\" placeholder=\"Enter Answer\" name=\"answer\" cols=\"40\" rows=\"5\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>\r\n        \r\n        <div class=\"form-group row\">\r\n            <label for=\"type\" class=\"col-3 col-form-label\">Type</label> \r\n            <div class=\"col-9\">\r\n            <select id=\"type\" name=\"type\" class=\"custom-select\" [(ngModel)]=\"interviewQuestion.questionType\">\r\n                <option *ngFor=\"let item of questionTypes\" [value]=\"item.questionType\">{{item.questionType}}</option>\r\n            </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label for=\"text\" class=\"col-3 col-form-label\">Rank</label> \r\n            <div class=\"col-9\">\r\n            <input id=\"text\" [(ngModel)]=\"interviewQuestion.rank\" name=\"text\" placeholder=\"Enter Rank\" type=\"number\" class=\"form-control\">\r\n            </div>\r\n        </div> \r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-3 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\" (click)=\"saveInterviewQuestionAnswer()\">Submit</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n             <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\" class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n         </fieldset> \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {LoaderService} from './../../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-question-types',\r\n  templateUrl: './add-edit-question-types.component.html',\r\n  styleUrls: ['./add-edit-question-types.component.scss']\r\n})\r\nexport class AddEditQuestionTypesComponent implements OnInit {\r\n\r\n  @Output() popupEvent=new EventEmitter();\r\n  interviewQuestion:any={questionType:\"\"};\r\n  questionTypes:any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  editMode=false;\r\n  constructor(private questionAnswerService:QuestionAnswerService,private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuestionTypes();\r\n  }\r\n\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(data=>{\r\n      this.questionTypes=data;\r\n      this.loaderService.display(false);\r\n    })\r\n  }\r\n\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionTypesPopup');\r\n  }\r\n\r\n  saveQuestionType() {\r\n    this.loaderService.display(true);\r\n    if(this.editMode) {\r\n      this.questionAnswerService.updateQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.editMode=false;\r\n        this.loaderService.display(false);\r\n      })\r\n    }\r\n    else {\r\n      this.questionAnswerService.addQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.loaderService.display(false);\r\n      })\r\n   }\r\n  }\r\n\r\n  deleteQuestionType(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.deleteQuestionType(id).subscribe(data=>{\r\n      this.getQuestionTypes();\r\n      this.loaderService.display(false);\r\n    })\r\n   }\r\n  }\r\n\r\n  editQuestionType(item){\r\n    this.interviewQuestion=JSON.parse(JSON.stringify(item));\r\n    this.editMode=true;\r\n  }\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content modal-question-types\"> \r\n        <div>\r\n         <fieldset>\r\n          <legend>Add/Edit Question Types:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Question Types</label> \r\n            <div class=\"col-8\">\r\n              <div *ngFor=\"let item of questionTypes\">\r\n                <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editQuestionType(item)\"></fa-icon><fa-icon class=\"hand-cursor delete-icon\" [icon]=\"faTrash\" (click)=\"deleteQuestionType(item._id)\"></fa-icon><span class=\"question-type-item\">{{item.questionType}}</span>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Add/Edit Question Type</label> \r\n            <div class=\"col-8\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.questionType\" placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>     \r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-4 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\" (click)=\"saveQuestionType()\">{{editMode==true?'Update':'Submit'}}</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n             <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\" class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n         </fieldset> \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {QuestionAnswerService} from \"../../services/question-answer-service/question-answer.service\";\r\nimport {LoaderService} from './../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-angular-interview-questions',\r\n  templateUrl: './angular-interview-questions.component.html',\r\n  styleUrls: ['./angular-interview-questions.component.scss']\r\n})\r\nexport class AngularInterviewQuestionsComponent implements OnInit {\r\n  questionAnswerList:any;\r\n  constructor(\r\n    private questionAnswerService:QuestionAnswerService,\r\n    private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.questionAnswerService.currentData.subscribe((data)=>{\r\n      this.questionAnswerList=data;\r\n      this.loaderService.display(false);\r\n   })\r\n    this.questionAnswerService.getQuestionAnswerList();\r\n  }\r\n}\r\n","<app-question-answer-panel [questionAnswerList]=\"questionAnswerList\" [adminMode]=\"false\"></app-question-answer-panel>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-affiliate-ads',\r\n  templateUrl: './affiliate-ads.component.html',\r\n  styleUrls: ['./affiliate-ads.component.scss']\r\n})\r\nexport class AffiliateAdsComponent implements OnInit {\r\n\r\n  @Input() index;\r\n  @Input() totalItems;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"index==4\"> \r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B08WBB369L&asins=B08WBB369L&linkId=a7c9c891fe90b0a6b5373540451325df&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&region=IN&placement=B079FB4XK9&asins=B079FB4XK9&linkId=572bd3d3e78b30bc19025f1fc333ea4d&show_border=true&link_opens_in_new_window=true\">\r\n    </iframe>\r\n  </div>\r\n  <div *ngIf=\"index==9\">\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B08XBGZ4R6&asins=B08XBGZ4R6&linkId=a054196073f3e8ff6631c1764858f703&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B092ZJVB6Z&asins=B092ZJVB6Z&linkId=434396edfdf81a24b170c81dd075c9ca&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n  </div>\r\n  <div *ngIf=\"index==14\">\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B08NK3YL8B&asins=B08NK3YL8B&linkId=92757a96eb1ee075e384f1d3fd690256&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&region=IN&placement=B08FJ8YSB8&asins=B08FJ8YSB8&linkId=98b48d35bf3bfd4f4aa78fd324c41c71&show_border=true&link_opens_in_new_window=true\">\r\n    </iframe>\r\n  </div>\r\n  <div *ngIf=\"index+1==totalItems\">\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B071Z8M4KX&asins=B071Z8M4KX&linkId=bfcf87ed285ecddbf769819762713bf3&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n      <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B072X7K4K4&asins=B072X7K4K4&linkId=19af7322756a5d9b77fb2926acaf8767&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n  </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-question-answer-panel',\r\n  templateUrl: './question-answer-panel.component.html',\r\n  styleUrls: ['./question-answer-panel.component.scss']\r\n})\r\nexport class QuestionAnswerPanelComponent implements OnInit {\r\n  @Input() questionAnswerList;\r\n  @Input() adminMode:boolean;\r\n  showQuestionAnswerModal:Boolean=false;\r\n  showQuestionTypeModal:Boolean=false;\r\n  searchKey: any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  editedItem:any;\r\n  constructor(\r\n    private questionAnswerService:QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      \r\n      this.searchKey = params.get('searchKey');\r\n      this.questionAnswerService.setUrlSearchVal(this.searchKey);\r\n    });\r\n\r\n  }\r\n  toggleShowHideAnswer(questionAnswerItem) {\r\n    if(!questionAnswerItem.showAnswer) {\r\n      questionAnswerItem.showAnswer=true;\r\n      questionAnswerItem.buttonText=\"Hide\"\r\n    }\r\n    else {\r\n     questionAnswerItem.showAnswer=false;\r\n     questionAnswerItem.buttonText=\"Show\"\r\n    }\r\n  }\r\n\r\n  openAddQuestionAnswerPopup() {\r\n    this.showQuestionAnswerModal=true;\r\n    this.editedItem={};\r\n  }\r\n\r\n  openAddQuestionTypePopup(){\r\n    this.showQuestionTypeModal=true;\r\n  }\r\n\r\n  closeModal(event) {\r\n    if(event==\"closeQuestionAnswerPopup\") {\r\n      this.showQuestionAnswerModal=false;\r\n    }\r\n    else {\r\n      this.showQuestionTypeModal=false;\r\n    } \r\n  }\r\n\r\n  deleteQuestionAnswer(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n     this.questionAnswerService.deleteQuestionAnswer(id);\r\n    }\r\n  }\r\n\r\n  editQuestionAnswer(data) {\r\n    this.editedItem=data;\r\n    this.showQuestionAnswerModal=true;\r\n  }\r\n\r\n}\r\n","<article class=\"panel-container\" [ngClass]=\"{'admin-panel':adminMode}\" >\r\n  <b>\r\n    <h2 class=\"page-heading\">Front end interview questions</h2>\r\n    <h3 class=\"display-none\">UI interview questions</h3>\r\n  </b>\r\n   <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <button class=\"col-md-3 col-5 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\" (click)='openAddQuestionAnswerPopup()'>+ Add Q/A</button>\r\n      <button class=\"col-md-3 col-6 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\" (click)='openAddQuestionTypePopup()'>+ Add/Edit Q/A type</button>\r\n    </div> \r\n  </div> \r\n   \r\n  <!-- <span class=\"badge badge-pill badge-secondary\">{{searchKey}}</span> -->\r\n  <div *ngFor=\"let questionAnswerItem of questionAnswerList;let i=index\"> \r\n    <div class=\"panel-item\">\r\n      <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-10 col-md-9\">\r\n            <span>{{i+1}}. <h3 class=\"question-text\" [innerHtml]=\"questionAnswerItem.question\"></h3></span>\r\n          </div>\r\n          <div class=\"col-xl-2 col-md-3 action-btns\">\r\n            <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editQuestionAnswer(questionAnswerItem)\"></fa-icon><fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\" (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\"></fa-icon><button class=\"showHideAnswer hand-cursor btn-show-hide\" (click)=\"toggleShowHideAnswer(questionAnswerItem)\">{{questionAnswerItem.buttonText?questionAnswerItem.buttonText:\"Show\"}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"panel-body\" [ngClass]=\"{'open': questionAnswerItem.showAnswer ==true}\">\r\n        <div class=\"panel-body-content\" [innerHtml]=\"questionAnswerItem.answer\"></div>\r\n      </div>\r\n    </div> \r\n    <div class=\"affiliate-ads-container\">\r\n      <app-affiliate-ads [index]=\"i\" [totalItems]=\"questionAnswerList.length\"></app-affiliate-ads>\r\n    </div>\r\n  </div>  \r\n</article>\r\n<app-add-edit-interview-questions [editedItem]=\"editedItem\" *ngIf=\"showQuestionAnswerModal\" (popupEvent)=\"closeModal($event)\"></app-add-edit-interview-questions>\r\n<app-add-edit-question-types *ngIf=\"showQuestionTypeModal\" (popupEvent)=\"closeModal($event)\"></app-add-edit-question-types>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { AngularInterviewQuestionsComponent } from './angular-interview-questions/angular-interview-questions.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AngularInterviewQuestionsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class InterviewQuestionsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularInterviewQuestionsComponent } from '../interview-questions/angular-interview-questions/angular-interview-questions.component';\r\nimport { InterviewQuestionsRoutingModule } from './interview-questions-routing.module';\r\nimport { QuestionAnswerPanelComponent } from '../interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AddEditInterviewQuestionsComponent } from './angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddEditQuestionTypesComponent } from './angular-interview-questions/add-edit-question-types/add-edit-question-types.component';\r\nimport { AffiliateAdsComponent } from './angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent,\r\n    AddEditInterviewQuestionsComponent,\r\n    AddEditQuestionTypesComponent,\r\n    AffiliateAdsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InterviewQuestionsRoutingModule,\r\n    FontAwesomeModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent\r\n  ]\r\n})\r\nexport class InterviewQuestionsModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  private stateList: Array<any> = [\r\n    { \"value\": \"AN\", \"label\": \"Andaman and Nicobar Islands\" },\r\n    { \"value\": \"AP\", \"label\": \"Andhra Pradesh\" },\r\n    { \"value\": \"AR\", \"label\": \"Arunachal Pradesh\" },\r\n    { \"value\": \"AS\", \"label\": \"Assam\" },\r\n    { \"value\": \"BR\", \"label\": \"Bihar\" },\r\n    { \"value\": \"CG\", \"label\": \"Chandigarh\" },\r\n    { \"value\": \"CH\", \"label\": \"Chhattisgarh\" },\r\n    { \"value\": \"DH\", \"label\": \"Dadra and Nagar Haveli\" },\r\n    { \"value\": \"DD\", \"label\": \"Daman and Diu\" },\r\n    { \"value\": \"DL\", \"label\": \"Delhi\" },\r\n    { \"value\": \"GA\", \"label\": \"Goa\" },\r\n    { \"value\": \"GJ\", \"label\": \"Gujarat\" },\r\n    { \"value\": \"HR\", \"label\": \"Haryana\" },\r\n    { \"value\": \"HP\", \"label\": \"Himachal Pradesh\" },\r\n    { \"value\": \"JK\", \"label\": \"Jammu and Kashmir\" },\r\n    { \"value\": \"JH\", \"label\": \"Jharkhand\" },\r\n    { \"value\": \"KA\", \"label\": \"Karnataka\" },\r\n    { \"value\": \"KL\", \"label\": \"Kerala\" },\r\n    { \"value\": \"LD\", \"label\": \"Lakshadweep\" },\r\n    { \"value\": \"MP\", \"label\": \"Madhya Pradesh\" },\r\n    { \"value\": \"MH\", \"label\": \"Maharashtra\" },\r\n    { \"value\": \"MN\", \"label\": \"Manipur\" },\r\n    { \"value\": \"ML\", \"label\": \"Meghalaya\" },\r\n    { \"value\": \"MZ\", \"label\": \"Mizoram\" },\r\n    { \"value\": \"NL\", \"label\": \"Nagaland\" },\r\n    { \"value\": \"OR\", \"label\": \"Odisha\" },\r\n    { \"value\": \"PY\", \"label\": \"Puducherry\" },\r\n    { \"value\": \"PB\", \"label\": \"Punjab\" },\r\n    { \"value\": \"RJ\", \"label\": \"Rajasthan\" },\r\n    { \"value\": \"SK\", \"label\": \"Sikkim\" },\r\n    { \"value\": \"TN\", \"label\": \"Tamil Nadu\" },\r\n    { \"value\": \"TS\", \"label\": \"Telangana\" },\r\n    { \"value\": \"TR\", \"label\": \"Tripura\" },\r\n    { \"value\": \"UK\", \"label\": \"Uttarakhand\" },\r\n    { \"value\": \"UP\", \"label\": \"Uttar Pradesh\" },\r\n    { \"value\": \"WB\", \"label\": \"West Bengal\" },\r\n  ];\r\n  constructor() { }\r\n\r\n  getStateList (): Array<any> {\r\n    return this.stateList;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}