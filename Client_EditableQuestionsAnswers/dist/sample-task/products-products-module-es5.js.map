{"version":3,"sources":["webpack:///src/app/products/modals/add-product/add-product.component.ts","webpack:///src/app/products/modals/add-product/add-product.component.html","webpack:///src/app/products/modals/product-description/product-description.component.ts","webpack:///src/app/products/modals/product-description/product-description.component.html","webpack:///src/app/products/product-list/product-list.component.ts","webpack:///src/app/products/product-list/product-list.component.html","webpack:///src/app/products/products-routing.module.ts","webpack:///src/app/products/products.module.ts"],"names":["modalRef","AddProductComponent","productService","commonService","modalService","loaderService","safeResourceUrl","productImages","className","isAdmin","currentlyUploadedImageSrc","productImagesToBeEdited","resetCurrentlySelectedImages","setPrivileges","createForm","userDetails","productForm","_id","categoryId","required","productName","description","shlok","references","dosage","indications","contraIndications","sanskritName","botanicalName","drugQuantity","stock","price","productImage","editMode","status","openAddProductModal","templateRef","setValuesToBeEdited","editedItem","patchValue","setImagesToBeEdited","getAllProductImagesToBeShown","getProductImageToBeShown","setEditModeForAdd","reset","getCategories","config","getModalConfig","show","resetProductImagesToBeEdited","event","i","target","files","length","push","setCurrentlyUploadedImgArr","file","imgSrc","URL","createObjectURL","formVal","update","save","formData","Array","isArray","append","data","property","FormData","setFilesAndFormDetails","display","addProduct","subscribe","response","handleProductChangeEvent","setAllFilesInFormData","setFormDetailsInFormData","updateProduct","hideModalAndClearForm","refreshProductEvent","hide","categories","selector","templateUrl","styleUrls","providers","modalRefProductDescription","ProductDescriptionComponent","cartService","orderService","notifierService","outOfStockText","sellerStocksEmptyText","orderConfirmationClass","setCurrentCurrency","setProductQuantityIfNull","currentCurrency","product","checkIfVisitorAndNavigate","navigateToLoginPage","addUserDetails","addToCartList","cartItemChange","next","quantity","initialState","modalRefOrderConfirmation","content","placeOrder","cartItem","addToOrderList","notify","provide","useValue","showIndicators","openProductDescriptionModal","ProductListComponent","faTrash","faEdit","isAllCategorySelected","isFireCrackerShown","handleSubscriptions","handleProductSearchSubsriptions","refreshProduct","getAllProducts","setCategoryIdParamIfNotAvailable","getProducts","productDataSearch","products","filterDataBySearchString","unfilteredProducts","getProductListByCategoryId","getAllProductList","result","confirmAction","deleteProduct","checkAndLoadProductsByCategory","item","JSON","parse","stringify","setProductId","productId","showFireCrackers","setTimeout","fireCrackersTimeout","receiveProductAddEvent","routes","path","component","ProductsRoutingModule","forChild","declarations","imports","ProductsModule","forRoot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACCA;;AACI;AAAA;;AAAA;;AAAA;;AAAA,iDAAiD,KAAjD;AAAsD,SAAtD;;AAAyD;;AAClD;;;;;;AAkBqB;;AAA2D;;AAC3D;;;;;;AADwC;;AAAmB;;AAAA;;;;;;AAW/D;;AAC0B;;AAAiB;;;;;;AAsHvD;;AACI;;AACJ;;;;;;AAD6B;;AAAA;;;;;;AAFjC;;AACI;;AAMJ;;;;;;AANuB;;AAAA;;;;;;AAQnB;;AACI;;;;AACJ;;;;;;;;AAD6B;;AAAA;;;;;;AAFjC;;AACI;;AAGJ;;;;;;AAH+C;;AAAA;;;;;;;;AAzJvD;;AACI;;AAAkC;;AAAW;;AAC7C;;AAA4E;AAAA;;AAAA;;AAAA,mDAAS,QAAAA,QAAA,OAAT;AAAyB,SAAzB;;AACxE;;AAAiD;;AAAO;;AAC5D;;AACJ;;AACA;;AACI;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAErD;;AACI;;AACI;;AACI;;AAA+C;;AAAQ;;AACvD;;AACI;;AACI;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAI;;AACnD;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAAK;;AACpD;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAW;;AAC1D;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAAS;;AACxD;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAM;;AACrD;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAAW;;AAC1D;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAkB;;AACjE;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAAa;;AAC5D;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAc;;AAC7D;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAAa;;AAC5D;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAK;;AACpD;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+C;;AAAK;;AACpD;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA+C;;AAAc;;AAC7D;;AACI;;AAA0E;;AACtE;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAhD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AAQA;;AAOA;;AACI;;AACI;;AAAiF;;AAAI;;AACzF;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,mDAAS,QAAAA,QAAA,OAAT;AAAyB,SAAzB;;AAA2B;;AAAM;;AACzC;;AACJ;;AACJ;;AACJ;;;;;;AAlKmC;;AAAA;;AAQC;;AAAA;;AAWP;;AAAA;;AAsH6B;;AAAA;;AAQA;;AAAA;;;;QD9IjDC,mB;AAaX,mCACUC,cADV,EAEUC,aAFV,EAGUC,YAHV,EAIUC,aAJV,EAKUC,eALV,EAK8C;AAAA;;AAJpC,aAAAJ,cAAA,GAAAA,cAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAbV,aAAAC,aAAA,GAAc,EAAd;AAEA,aAAAC,SAAA,GAAY,4BAAZ;AACA,aAAAC,OAAA,GAAU,KAAV;AAEA,aAAAC,yBAAA,GAA0B,EAA1B;AACA,aAAAC,uBAAA,GAAwB,EAAxB;AAQO;;;;eAEP,oBAAQ;AACN,eAAKC,4BAAL;AACA,eAAKC,aAAL;AACA,eAAKC,UAAL;AACD;;;eAED,wCAA+B;AAC7B,eAAKJ,yBAAL,GAA+B,EAA/B;AACD;;;eAED,yBAAgB;AACd,eAAKD,OAAL,GAAe,KAAKN,aAAL,CAAmBY,WAAnB,CAA+BN,OAA9C;AACD;;;eAED,sBAAU;AACR,eAAKO,WAAL,GAAmB,IAAI,wDAAJ,CAAc;AAC/BC,eAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAD0B;AAE/BC,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,QAA/B,CAFmB;AAG/BC,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,QAA/B,CAHkB;AAI/BE,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAJkB;AAK/BC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CALwB;AAM/BC,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CANmB;AAO/BC,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAPuB;AAQ/BC,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CARkB;AAS/BC,6BAAiB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CATY;AAU/BC,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAViB;AAW/BC,yBAAa,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAXgB;AAY/BC,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAZiB;AAa/BC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,CAAhB,CAbwB;AAc/BC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,CAAhB,CAdwB;AAe/BC,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAfiB,WAAd,CAAnB;AAiBD;;;eAED,uBAAc;AACZ,cAAG,KAAKC,QAAL,IAAiB,KAAKA,QAAL,CAAcC,MAAlC,EAA0C;AACxC,iBAAKC,mBAAL,CAAyB,KAAKC,WAA9B;AACA,iBAAKC,mBAAL,CAAyB,KAAKJ,QAAL,CAAcK,UAAvC;AACD;AACF;;;eAED,6BAAoBA,UAApB,EAAgC;AAC9B,eAAKtB,WAAL,CAAiBuB,UAAjB,CAA4BD,UAA5B;AACA,eAAKE,mBAAL,CAAyBF,UAAzB;AACD;;;eAED,oCAA2B;AACzB,eAAK5B,yBAAL,GAA+B,EAA/B;AACA,eAAKC,uBAAL,GAA8B,KAAKT,cAAL,CAAoBuC,4BAApB,CAAiD,KAAKlC,aAAtD,CAA9B;AACD;;;eAED,6BAAoB+B,UAApB,EAAgC;AAC9B,eAAK/B,aAAL,GAAqB+B,UAAU,CAAC/B,aAAhC;AACA,eAAKmC,wBAAL;AACD;;;eAED,6BAAoBN,WAApB,EAAkDH,QAAlD,EAA2D;AACzD,eAAKU,iBAAL,CAAuBV,QAAvB;AACA,eAAKjB,WAAL,CAAiB4B,KAAjB;AACA,eAAKC,aAAL;AACA,cAAMC,MAAM,GAAE,KAAK3C,aAAL,CAAmB4C,cAAnB,CAAkC,KAAKvC,SAAvC,CAAd;AACA,eAAKR,QAAL,GAAgB,KAAKI,YAAL,CAAkB4C,IAAlB,CAAuBZ,WAAvB,EAAoCU,MAApC,CAAhB;AACD;;;eAED,2BAAkBb,QAAlB,EAA4B;AAC1B,cAAGA,QAAQ,IAAE,KAAb,EAAoB;AAClB,iBAAKA,QAAL,CAAcC,MAAd,GAAqBD,QAArB;AACA,iBAAKgB,4BAAL;AACD;AACF;;;eAED,wCAA+B;AAC7B,eAAKtC,uBAAL,GAA6B,EAA7B;AACD;;;eAED,kBAASuC,KAAT,EAAgB;AACd,eAAK3C,aAAL,GAAmB,EAAnB;AACA,eAAKG,yBAAL,GAA+B,EAA/B;;AACA,eAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AAClD,iBAAK5C,aAAL,CAAmBgD,IAAnB,CAAwBL,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,CAAnB,CAAxB;AACA,iBAAKK,0BAAL,CAAgCN,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,CAAnB,CAAhC;AACD;AACF;;;eAED,oCAA2BM,IAA3B,EAAiC;AAC/B,cAAIC,MAAM,GAACC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAX;AACA,eAAK/C,yBAAL,CAA+B6C,IAA/B,CAAoCG,MAApC;AACD;;;eAED,gBAAOG,OAAP,EAAc;AAEZ,cAAG,KAAK5B,QAAL,IAAiB,KAAKA,QAAL,CAAcC,MAAlC,EAA0C;AACxC,iBAAK4B,MAAL,CAAYD,OAAZ;AACD,WAFD,MAGK;AACH,iBAAKE,IAAL,CAAUF,OAAV;AACD;AACF;;;eAED,+BAAsBG,QAAtB,EAAgC;AAC9B,cAAGC,KAAK,CAACC,OAAN,CAAc,KAAK3D,aAAnB,CAAH,EAAsC;AACpC,iBAAI,IAAI4C,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAK5C,aAAL,CAAmB+C,MAAjC,EAAwCH,CAAC,EAAzC,EAA6C;AAC3Ca,sBAAQ,CAACG,MAAT,CAAgB,OAAhB,EAAwB,KAAK5D,aAAL,CAAmB4C,CAAnB,CAAxB;AACD;AACF,WAJD,MAKK;AACHa,oBAAQ,CAACG,MAAT,CAAgB,eAAhB,EAAiC,KAAK5D,aAAtC;AACD;AACF;;;eAED,kCAAyByD,QAAzB,EAAmCI,IAAnC,EAAyC;AACvC,eAAK,IAAMC,QAAX,IAAuBD,IAAvB,EAA6B;AAE3BJ,oBAAQ,CAACG,MAAT,CAAgBE,QAAhB,EAA0BD,IAAI,CAACC,QAAD,CAA9B;AACD;AACF;;;eAED,cAAKD,IAAL,EAAW;AAAA;;AACT,cAAIJ,QAAQ,GAAG,IAAIM,QAAJ,EAAf;AACA,eAAKC,sBAAL,CAA4BP,QAA5B,EAAsCI,IAAtC;AACA,eAAK/D,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,eAAKtE,cAAL,CAAoBuE,UAApB,CAA+BT,QAA/B,EAAyCU,SAAzC,CAAmD,UAAAC,QAAQ,EAAE;AAC3D,iBAAI,CAACtE,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;;AACA,iBAAI,CAACI,wBAAL,CAA8BR,IAA9B;AACD,WAHD;AAID;;;eAED,gCAAuBJ,QAAvB,EAAiCI,IAAjC,EAAuC;AACrC,eAAKS,qBAAL,CAA2Bb,QAA3B;AACA,eAAKc,wBAAL,CAA8Bd,QAA9B,EAAwCI,IAAxC;AACD;;;eAED,gBAAOA,IAAP,EAAa;AAAA;;AACX,cAAIJ,QAAQ,GAAG,IAAIM,QAAJ,EAAf;AACA,eAAKC,sBAAL,CAA4BP,QAA5B,EAAsCI,IAAtC;AACA,eAAK/D,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,eAAKtE,cAAL,CAAoB6E,aAApB,CAAkCf,QAAlC,EAA4CI,IAA5C,EAAkDM,SAAlD,CAA4D,UAAAC,QAAQ,EAAE;AACpE,kBAAI,CAACtE,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;;AACA,kBAAI,CAACI,wBAAL,CAA8B,MAAI,CAAC3C,QAAL,CAAcK,UAA5C;AACD,WAHD;AAID;;;eAED,kCAAyB8B,IAAzB,EAA+B;AAC7B,eAAKY,qBAAL;;AACA,cAAGZ,IAAI,CAAClD,UAAR,EAAoB;AAClB,iBAAKf,aAAL,CAAmB8E,mBAAnB,CAAuCb,IAAvC;AACD;AACF;;;eAED,iCAAwB;;;AACtB,qBAAKpE,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEkF,IAAF,EAAb;AACA,eAAKlE,WAAL,CAAiB4B,KAAjB;AACA,eAAKrC,aAAL,GAAqB,EAArB;AACD;;;eAED,yBAAgB;AACd,eAAK4E,UAAL,GAAkB,KAAKhF,aAAL,CAAmB0C,aAAnB,EAAlB;AACD;;;;;;;uBAlLU5C,mB,EAAmB,gK,EAAA,6J,EAAA,mI,EAAA,6J,EAAA,yJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;;;;;;;;;;;;;kFAHnB,CAAC,wFAAD,C,GAAqB,kE;AAAA,c;AAAA,a;AAAA,wzE;AAAA;AAAA;ACZlC;;AAIA;;;;AAJQ;;;;;;;;;;sEDeKA,mB,EAAmB;cAP/B,uDAO+B;eAPrB;AACTmF,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD,CAHF;AAITC,mBAAS,EAAE,CAAC,wFAAD;AAJF,S;AAOqB,Q;;;;;;;;;;;;;;gBAC7B;;;gBACA,uD;iBAAU,oB;;;;;;;;;;;;;;;;;;;;AElBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBwB;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAHjB;;AACI;;AACI;;AAGJ;;AACJ;;;;;;AAJe;;AAAA;;;;;;AAKf;;AACI;;AACJ;;;;;;AAWI;;AAEI;;AAAmC;;AAAa;;AAChD;;AACI;;AAAkC;;AAAwB;;AAC9D;;AACJ;;;;;;AAF0C;;AAAA;;;;;;;;AAG1C;;AACI;;AAAmC;;AAAQ;;AAC3C;;AACI;;AACI;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAC;;AAC3E;;AACA;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAAlD;;AAEA;;AACI;;AAAoK;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAC;;AAC9M;;AACJ;;AACJ;;;;;;AAN0D;;AAAA;;AAGb;;AAAA;;AAAiD;;;;;;;;AAI9F;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AACzB;;AACR;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAwD;;AAAO;;AACvE;;AACJ;;;;;;AACA;;AACI;;AAAgC;;AAAkB;;AACvD;;;;;;AADqC;;AAAA;;;;;;;;AA3DpD;;AAEI;;AAA4E;AAAA;;AAAA;;AAAA,qEAAS,QAAAC,0BAAA,OAAT;AAA2C,SAA3C;;AACxE;;AAAiD;;AAAO;;AAC5D;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAOA;;AAGJ;;AACA;;AACI;;AACI;;AAA0B;;AAAuB;;AACjD;;AAAiC;;AAAuB;;AACxD;;AACI;;AAAsC;;AAAmB;;AACzD;;AAA0B;;AAAiB;;AAC/C;;AAEA;;AAOA;;AAaA;;AASA;;AAGJ;;AACJ;;AACJ;;AACJ;;;;;;AAvD4C;;AAAA;;AAOK;;AAAA;;AAMP;;AAAA;;AACO;;AAAA;;AAES;;AAAA;;AACZ;;AAAA;;AAI1B;;AAAA;;AAMgC;;AAAA;;AAaF;;AAAA;;AASJ;;AAAA;;;;QD5CrCC,2B;AAYX,2CACUrF,YADV,EAEUF,cAFV,EAGUC,aAHV,EAIUE,aAJV,EAKUqF,WALV,EAMUC,YANV,EAOUC,eAPV,EAO0C;AAAA;;AANhC,aAAAxF,YAAA,GAAAA,YAAA;AACA,aAAAF,cAAA,GAAAA,cAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAqF,WAAA,GAAAA,WAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAbV,aAAApF,SAAA,GAAY,oCAAZ;AAeI,aAAKqF,cAAL,GAAsB,KAAK1F,aAAL,CAAmB0F,cAAzC;AACA,aAAKC,qBAAL,GAA6B,KAAK3F,aAAL,CAAmB2F,qBAAhD;AACA,aAAKC,sBAAL,GAA8B,KAAK5F,aAAL,CAAmB4F,sBAAjD;AACD;;;;eAEH,oBAAQ;AACN,eAAKC,kBAAL;AACA,eAAKC,wBAAL;AACD;;;eAED,qCAA4B7D,WAA5B,EAAwD;AACtD,cAAMU,MAAM,GAAE,KAAK3C,aAAL,CAAmB4C,cAAnB,CAAkC,KAAKvC,SAAvC,CAAd;AACA,eAAKgF,0BAAL,GAAkC,KAAKpF,YAAL,CAAkB4C,IAAlB,CAAuBZ,WAAvB,EAAoCU,MAApC,CAAlC;AACA,eAAKJ,wBAAL;AACD;;;eAED,8BAAqB;AACnB,eAAKwD,eAAL,GAAuB,KAAK/F,aAAL,CAAmB+F,eAA1C;AACD;;;eAED,oCAA2B;AACzB,eAAK3F,aAAL,GAAoB,KAAKL,cAAL,CAAoBuC,4BAApB,CAAiD,KAAK0D,OAAL,CAAa5F,aAA9D,CAApB;AACD;;;eAED,mBAAU4F,OAAV,EAAmB;AAAA;;AACjB,cAAG,KAAKhG,aAAL,CAAmBiG,yBAAnB,EAAH,EAAmD;AACjD,iBAAKZ,0BAAL,CAAgCN,IAAhC;AACA,iBAAK/E,aAAL,CAAmBkG,mBAAnB;AACF,WAHA,MAII;AACF,gBAAIjC,IAAI,GAAG+B,OAAX;AACA,iBAAKhG,aAAL,CAAmBmG,cAAnB,CAAkClC,IAAlC;AACA,iBAAK/D,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,iBAAKkB,WAAL,CAAiBa,aAAjB,CAA+BnC,IAA/B,EAAqCM,SAArC,CAA+C,UAAAC,QAAQ,EAAE;AACvD,oBAAI,CAACtE,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;;AAEA,oBAAI,CAACkB,WAAL,CAAiBc,cAAjB,CAAgCC,IAAhC;AACD,aAJD;AAKD;AACF;;;eAED,mBAAUN,OAAV,EAAmB,CAElB;;;eAED,oCAA2B;AACzB,cAAG,CAAC,KAAKA,OAAL,CAAaO,QAAjB,EAA2B;AACzB,iBAAKP,OAAL,CAAaO,QAAb,GAAwB,CAAxB;AACD;AACF;;;eAED,2BAAkBP,OAAlB,EAA2B;AACzB,cAAGA,OAAO,CAACO,QAAR,GAAkB,CAArB,EAAwB;AACrBP,mBAAO,CAACO,QAAR,IAAoB,CAApB;AACF;AACF;;;eAED,2BAAkBP,OAAlB,EAA2B;AACzBA,iBAAO,CAACO,QAAR,IAAoB,CAApB;AACD;;;eAED,oCAA2BP,OAA3B,EAAkC;AAAA;;AAChC,cAAG,KAAKhG,aAAL,CAAmBiG,yBAAnB,EAAH,EAAmD;AACjD,iBAAKZ,0BAAL,CAAgCN,IAAhC;AACA,iBAAK/E,aAAL,CAAmBkG,mBAAnB;AACF,WAHA,MAII;AACF,iBAAKb,0BAAL,CAAgCN,IAAhC;AACA,iBAAK/E,aAAL,CAAmBmG,cAAnB,CAAkCH,OAAlC;AACA,gBAAMQ,YAAY,GAAQ;AACxBA,0BAAY,EAAE;AACZR,uBAAO,EAAPA;AADY,eADU;AAIxB,uBAAO,KAAKJ;AAJY,aAA1B;AAMA,gBAAMjD,MAAM,GAAE,KAAK3C,aAAL,CAAmB4C,cAAnB,CAAkC,KAAKgD,sBAAvC,CAAd;AACA,iBAAKa,yBAAL,GAAiC,KAAKxG,YAAL,CAAkB4C,IAAlB,CAAuB,mHAAvB,EAAqD2D,YAArD,CAAjC;AACA,iBAAKC,yBAAL,CAA+BC,OAA/B,CAAuC3D,KAAvC,CAA6CwB,SAA7C,CAAuD,UAAAN,IAAI,EAAE;AAC3D,oBAAI,CAAC0C,UAAL,CAAgB1C,IAAhB;AACD,aAFD;AAGD;AACF;;;eAED,oBAAW2C,QAAX,EAAqB;AAAA;;AACnB,eAAK1G,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,eAAKmB,YAAL,CAAkBqB,cAAlB,CAAiCD,QAAjC,EAA2CrC,SAA3C,CAAqD,UAAAC,QAAQ,EAAE;AAC7D,kBAAI,CAACtE,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;;AACA,kBAAI,CAACoB,eAAL,CAAqBqB,MAArB,CAA4B,SAA5B,EAAuC,4BAAvC;;AACA,kBAAI,CAACzB,0BAAL,CAAgCN,IAAhC;AACD,WAJD;AAKD;;;;;;;uBA/GUO,2B,EAA2B,mI,EAAA,gK,EAAA,6J,EAAA,6J,EAAA,uJ,EAAA,0J,EAAA,iI;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA;AAAA;AAAA,O;AAAA,kFAJ3B,CACT;AAAEyB,eAAO,EAAE,qEAAX;AAA2BC,gBAAQ,EAAE;AAAEC,wBAAc,EAAE;AAAlB;AAArC,OADS,CAI2B,E;AAFrC,c;AAAA,a;AAAA,kyD;AAAA;AAAA;;;ACjBH;;AAA4C;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,2BAAA,KAAT;AAAgE,WAAhE;;AAAkE;;AAC9G;;AAGA;;;;AAJ8G;;AAAA;;;;;;;;;sEDmBjG5B,2B,EAA2B;cARvC,uDAQuC;eAR7B;AACTL,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD,CAHF;AAITC,mBAAS,EAAE,CACT;AAAE2B,mBAAO,EAAE,qEAAX;AAA2BC,oBAAQ,EAAE;AAAEC,4BAAc,EAAE;AAAlB;AAArC,WADS;AAJF,S;AAQ6B,Q;;;;;;;;;;;;;;;;;;gBACrC;;;;;;;;;;;;;;;;;;;;AEpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACA;;AACJ;;;;;;AAuB4B;;;;;;;;AACI;;;;;;AACJ;;;;;;;;AAaA;;AACI;;AACI;;AACI;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAC;;AAC3E;;AACA;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAAlD;;AAEA;;AACI;;AAAoK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAC;;AAC9M;;AACJ;;AACJ;;;;;;;;AAN0D;;AAAA;;AAGb;;AAAA;;AAAiD;;;;;;;;AAI9F;;AACI;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwD;;AAAO;;AACnE;;;;;;AACA;;AACK;;AAAgC;;AAAkB;;AACvD;;;;;;AADqC;;AAAA;;;;;;;;AAGjC;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACJ;;;;;;AAN2C;;AAAA;;AAGE;;AAAA;;;;;;AAhD7D;;AAEI;;AAEI;;AACI;;AAEA;;AAEJ;;AACA;;AACI;;AAEI;;AACJ;;AACA;;AAAiC;;AAAuB;;AACxD;;AACI;;AAAsC;;AAAmB;;AACzD;;AAA0B;;AAAiB;;AAC/C;;AACA;;AAYA;;AAQA;;AAGA;;AACI;;AAQJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAlDiB;;AAAA;;AAEA;;AAAA;;AAMwB;;AAAA;;AAEI;;AAAA;;AAES;;AAAA;;AACZ;;AAAA;;AAEI;;AAAA;;AAYK;;AAAA;;AAQT;;AAAA;;AAIa;;AAAA;;;;QDhD1DE,oB;AAmBX,oCACUjH,aADV,EAEUH,cAFV,EAGUC,aAHV,EAIUuF,WAJV,EAKUC,YALV,EAMUvF,YANV,EAOUwF,eAPV,EAO0C;AAAA;;AANhC,aAAAvF,aAAA,GAAAA,aAAA;AACA,aAAAH,cAAA,GAAAA,cAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAuF,WAAA,GAAAA,WAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAvF,YAAA,GAAAA,YAAA;AACA,aAAAwF,eAAA,GAAAA,eAAA;AArBV,aAAA2B,OAAA,GAAQ,yEAAR;AACA,aAAAC,MAAA,GAAO,wEAAP;AACA,aAAAC,qBAAA,GAAwB,IAAxB;AACA,aAAAxF,QAAA,GAAW;AACTC,gBAAM,EAAE,KADC;AAETI,oBAAU,EAAE;AAFH,SAAX;AAIA,aAAA7B,OAAA,GAAU,KAAV;AAKA,aAAAiH,kBAAA,GAAqB,KAArB;AAWI,aAAK7B,cAAL,GAAsB,KAAK1F,aAAL,CAAmB0F,cAAzC;AACA,aAAKC,qBAAL,GAA6B,KAAK3F,aAAL,CAAmB2F,qBAAhD;AACA,aAAKC,sBAAL,GAA8B,KAAK5F,aAAL,CAAmB4F,sBAAjD;AACD;;;;eAEH,oBAAQ;AACN,eAAKlF,aAAL;AACA,eAAK8G,mBAAL;AACA,eAAKC,+BAAL;AACA,eAAK5B,kBAAL;AACD;;;eAED,yBAAgB;AACd,eAAKvF,OAAL,GAAe,KAAKN,aAAL,CAAmBY,WAAnB,CAA+BN,OAA9C;AACD;;;eAED,8BAAqB;AACnB,eAAKyF,eAAL,GAAuB,KAAK/F,aAAL,CAAmB+F,eAA1C;AACD;;;eAED,+BAAsB;AAAA;;AACpB,eAAK/F,aAAL,CAAmB0H,cAAnB,CAAkCnD,SAAlC,CAA4C,UAAAN,IAAI,EAAE;AAChD,gBAAGA,IAAI,IAAIA,IAAI,CAAC,uBAAD,CAAf,EAA0C;AACvC,oBAAI,CAACqD,qBAAL,GAA6B,IAA7B;;AACA,oBAAI,CAACK,cAAL;AACF,aAHD,MAIK;AACH,oBAAI,CAACL,qBAAL,GAA6B,KAA7B;;AACA,oBAAI,CAACM,gCAAL,CAAsC3D,IAAtC;;AACA,oBAAI,CAAC4D,WAAL,CAAiB5D,IAAI,CAAC,YAAD,CAArB;AACD;AACF,WAVD;AAYD;;;eAED,2CAAkC;AAAA;;AAChC,eAAKlE,cAAL,CAAoB+H,iBAApB,CAAsCvD,SAAtC,CAAgD,UAAAN,IAAI,EAAE;AACnD,kBAAI,CAAC8D,QAAL,GAAgB,MAAI,CAAC/H,aAAL,CAAmBgI,wBAAnB,CAA4C,MAAI,CAACC,kBAAjD,EAAoEhE,IAApE,CAAhB;AACF,WAFD;AAGD;;;eAED,0CAAiCA,IAAjC,EAAuC;AACpC,cAAG,CAACA,IAAI,CAAClD,UAAT,EAAqB;AAClBkD,gBAAI,CAAClD,UAAL,GAAkBkD,IAAI,CAAC,KAAD,CAAtB;AACF;AACH;;;eAED,qBAAYA,IAAZ,EAAmB;AAAA;;AACjB,eAAK/D,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,eAAKtE,cAAL,CAAoBmI,0BAApB,CAA+CjE,IAA/C,EAAqDM,SAArD,CAA+D,UAAAN,IAAI,EAAE;AAClE,kBAAI,CAAC8D,QAAL,GAAgB9D,IAAhB;AACA,kBAAI,CAACgE,kBAAL,GAA0BhE,IAA1B;;AACA,kBAAI,CAAC/D,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;AACF,WAJD;AAKD;;;eAED,0BAAiB;AAAA;;AACf,eAAKnE,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,eAAKtE,cAAL,CAAoBoI,iBAApB,GAAwC5D,SAAxC,CAAkD,UAAAN,IAAI,EAAE;AACtD,kBAAI,CAAC8D,QAAL,GAAgB9D,IAAhB;AACA,kBAAI,CAACgE,kBAAL,GAA0BhE,IAA1B;;AACA,kBAAI,CAAC/D,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;AACD,WAJD;AAKD;;;eAED,uBAAcJ,IAAd,EAAoB;AAAA;;AAClB,cAAImE,MAAM,GAAC,KAAKpI,aAAL,CAAmBqI,aAAnB,EAAX;;AACA,cAAGD,MAAH,EAAW;AACX,iBAAKlI,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,iBAAKtE,cAAL,CAAoBuI,aAApB,CAAkCrE,IAAI,CAACnD,GAAvC,EAA4CyD,SAA5C,CAAsD,UAAAC,QAAQ,EAAE;AAC9D,qBAAI,CAAC+D,8BAAL,CAAoCtE,IAApC;;AACA,qBAAI,CAAC/D,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;AACD,aAHD;AAIA;AACD;;;eAED,wCAA+BJ,IAA/B,EAAqC;AACnC,cAAG,KAAKqD,qBAAR,EAA+B;AAC7B,iBAAKK,cAAL;AACD,WAFD,MAGK;AACH,iBAAKE,WAAL,CAAiB5D,IAAI,CAAC,YAAD,CAArB;AACD;AACF;;;eAED,qBAAYuE,IAAZ,EAAgB;AACd,cAAIrG,UAAU,GAACsG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAf;AACA,eAAK1G,QAAL,GAAc;AACZC,kBAAM,EAAE,IADI;AAEZI,sBAAU,EAAEA;AAFA,WAAd;AAID;;;eAED,kCAAyBN,YAAzB,EAAuC;AACrC,iBAAO,KAAK9B,cAAL,CAAoBwC,wBAApB,CAA6CV,YAA7C,CAAP;AACD;;;eAED,mBAAUmE,OAAV,EAAmB;AAAA;;AACjB,cAAG,KAAKhG,aAAL,CAAmBiG,yBAAnB,EAAH,EAAmD;AAChD,iBAAKjG,aAAL,CAAmBkG,mBAAnB;AACF,WAFD,MAGK;AACH,iBAAK0C,YAAL,CAAkB5C,OAAlB;AACA,gBAAI/B,IAAI,GAAG+B,OAAX;AACA,iBAAKhG,aAAL,CAAmBmG,cAAnB,CAAkClC,IAAlC;AACA,iBAAK/D,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,iBAAKkB,WAAL,CAAiBa,aAAjB,CAA+BnC,IAA/B,EAAqCM,SAArC,CAA+C,UAAAC,QAAQ,EAAE;AACvD,qBAAI,CAACtE,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;;AACA,qBAAI,CAACkB,WAAL,CAAiBc,cAAjB,CAAgCC,IAAhC;AACD,aAHD;AAID;AACF;;;eAED,sBAAaN,OAAb,EAAsB;AACpBA,iBAAO,CAAC6C,SAAR,GAAoB7C,OAAO,CAAClF,GAA5B;AACD;;;eAED,mBAAUkF,OAAV,EAAmB,CAElB;;;eAED,gCAAuB/B,IAAvB,EAA6B,CAE5B;;;eAED,mCAA0B,CAEzB;;;eAED,oCAA2B+B,OAA3B,EAAkC;AAAA;;AAChC,cAAG,KAAKhG,aAAL,CAAmBiG,yBAAnB,EAAH,EAAmD;AACjD,iBAAKjG,aAAL,CAAmBkG,mBAAnB;AACF,WAFA,MAGI;AACF,iBAAKlG,aAAL,CAAmBmG,cAAnB,CAAkCH,OAAlC;AACA,gBAAMQ,YAAY,GAAQ;AACxBA,0BAAY,EAAE;AACZR,uBAAO,EAAPA;AADY,eADU;AAIxB,uBAAO,KAAKJ;AAJY,aAA1B;AAMA,gBAAMjD,MAAM,GAAE,KAAK3C,aAAL,CAAmB4C,cAAnB,CAAkC,KAAKgD,sBAAvC,CAAd;AACA,iBAAK/F,QAAL,GAAgB,KAAKI,YAAL,CAAkB4C,IAAlB,CAAuB,0HAAvB,EAAqD2D,YAArD,CAAhB;AACA,iBAAK3G,QAAL,CAAc6G,OAAd,CAAsB3D,KAAtB,CAA4BwB,SAA5B,CAAsC,UAAAN,IAAI,EAAE;AAC1C,qBAAI,CAAC0C,UAAL,CAAgB1C,IAAhB;AACD,aAFD;AAGD;AACF;;;eAED,oBAAW2C,QAAX,EAAqB;AAAA;;AACnB,eAAK1G,aAAL,CAAmBmE,OAAnB,CAA2B,IAA3B;AACA,eAAKmB,YAAL,CAAkBqB,cAAlB,CAAiCD,QAAjC,EAA2CrC,SAA3C,CAAqD,UAAAC,QAAQ,EAAE;AAC7D,mBAAI,CAACtE,aAAL,CAAmBmE,OAAnB,CAA2B,KAA3B;;AACA,mBAAI,CAACoB,eAAL,CAAqBqB,MAArB,CAA4B,SAA5B,EAAuC,4BAAvC;;AACA,mBAAI,CAACgC,gBAAL;AACD,WAJD;AAKD;;;eAED,2BAAkB9C,OAAlB,EAA2B;AACzB,cAAGA,OAAO,CAACO,QAAR,GAAkB,CAArB,EAAwB;AACrBP,mBAAO,CAACO,QAAR,IAAoB,CAApB;AACF;AACF;;;eAED,2BAAkBP,OAAlB,EAA2B;AACzBA,iBAAO,CAACO,QAAR,IAAoB,CAApB;AACD;;;eAED,4BAAmB;AAAA;;AACjB,eAAKgB,kBAAL,GAAyB,IAAzB;AACAwB,oBAAU,CAAC,YAAI;AACb,mBAAI,CAACxB,kBAAL,GAA0B,KAA1B;AACD,WAFS,EAER,KAAKvH,aAAL,CAAmBgJ,mBAFX,CAAV;AAGD;;;;;;;uBAzMU7B,oB,EAAoB,6J,EAAA,gK,EAAA,6J,EAAA,uJ,EAAA,0J,EAAA,mI,EAAA,iI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,w7D;AAAA;AAAA;ACjBjC;;AAIA;;AAAyB;;AAAQ;;AACjC;;AACI;;AAEI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAEI;;AACI;AAAA,mBAAmB,IAAA8B,sBAAA,QAAnB;AAAiD,WAAjD;;AAAmD;;AAC3D;;AACJ;;AACA;;AAEI;;AAwDJ;;AACJ;;AAEJ;;AACJ;;;;AAjFkB;;AAeiD;;AAAA;;AAO/C;;AAAA;;;;;;;;;sEDLP9B,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTlC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAM+D,MAAM,GAAW,CACrB;AACA;AACA;AACA;AACA;AACEC,UAAI,EAAC,EADP;AAEEC,eAAS,EAAE;AAFb,KALqB,CAAvB;;QAkBaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,gBALvB,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBJ,MAAtB,CAFO,CAKuB;;;;0HAArBG,qB,EAAqB;AAAA,kBAJ9B,4DAI8B,EAJlB,4DAIkB;AAAA,O;AAJlB,K;;;;;sEAIHA,qB,EAAqB;cAPjC,sDAOiC;eAPxB;AACRE,sBAAY,EAAE,EADN;AAERC,iBAAO,EAAE,CACP,4DADO,EAEP,6DAAaF,QAAb,CAAsBJ,MAAtB,CAFO;AAFD,S;AAOwB,Q;;;;;;;;;;;;;;;;;;ACvBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoCaO,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAZhB,CACP,4DADO,EAEP,0DAFO,EAGP,kFAHO,EAIP,8EAJO,EAKP,kEALO,EAMP,qGANO,EAOP,2FAPO,EAQP,sEAAeC,OAAf,EARO,EASP,0EATO,CAYgB;;;;0HAAdD,c,EAAc;AAAA,uBAjBvB,yFAiBuB,EAhBvB,6FAgBuB,EAfvB,qHAeuB,EAdvB,0HAcuB;AAdK,kBAG5B,4DAH4B,EAI5B,0DAJ4B,EAK5B,kFAL4B,EAM5B,8EAN4B,EAO5B,kEAP4B,EAQ5B,qGAR4B,EAS5B,2FAT4B,EASX,qEATW,EAW5B,0EAX4B;AAcL,O;AAHX,K;;;;;sEAGHA,c,EAAc;cAnB1B,sDAmB0B;eAnBjB;AACRF,sBAAY,EAAE,CACZ,yFADY,EAEZ,6FAFY,EAGZ,qHAHY,EAIZ,0HAJY,CADN;AAORC,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kFAHO,EAIP,8EAJO,EAKP,kEALO,EAMP,qGANO,EAOP,2FAPO,EAQP,sEAAeE,OAAf,EARO,EASP,0EATO;AAPD,S;AAmBiB,Q","file":"products-products-module-es5.js","sourcesContent":["import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { SafeResourceUrlPipe } from 'src/app/pipes/safe-resource-url.pipe';\r\nimport { CommonService } from 'src/app/services/common-service/common.service';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { ProductService } from 'src/app/services/product-service/product.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss'],\r\n  providers: [SafeResourceUrlPipe]\r\n  \r\n})\r\nexport class AddProductComponent implements OnInit {\r\n  @Input() editMode; \r\n  @ViewChild('addProductTemplate') templateRef: TemplateRef<any>;\r\n  modalRef?: BsModalRef;\r\n  productForm: FormGroup;\r\n  productImages=[];\r\n  categories: any;\r\n  className = 'add-product-modalcontainer'\r\n  isAdmin = false;\r\n  files: any;\r\n  currentlyUploadedImageSrc=[];\r\n  productImagesToBeEdited=[]\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private commonService: CommonService,\r\n    private modalService: BsModalService,\r\n    private loaderService: LoaderService,\r\n    private safeResourceUrl: SafeResourceUrlPipe\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetCurrentlySelectedImages();\r\n    this.setPrivileges();\r\n    this.createForm();\r\n  }\r\n\r\n  resetCurrentlySelectedImages() {\r\n    this.currentlyUploadedImageSrc=[]\r\n  }\r\n\r\n  setPrivileges() {\r\n    this.isAdmin = this.commonService.userDetails.isAdmin;\r\n  }\r\n\r\n  createForm(): void{\r\n    this.productForm = new FormGroup({\r\n      _id: new FormControl('') , \r\n      categoryId: new FormControl('', Validators.required) , \r\n      productName: new FormControl('', Validators.required) ,      \r\n      description: new FormControl(''),\r\n      shlok: new FormControl(''),\r\n      references: new FormControl(''),\r\n      dosage: new FormControl(''),\r\n      indications: new FormControl(''),\r\n      contraIndications: new FormControl(''),\r\n      sanskritName: new FormControl(''),\r\n      botanicalName: new FormControl(''),\r\n      drugQuantity: new FormControl(''),\r\n      stock: new FormControl(0),\r\n      price: new FormControl(0),\r\n      productImage: new FormControl(''),\r\n    })\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if(this.editMode && this.editMode.status) {\r\n      this.openAddProductModal(this.templateRef);\r\n      this.setValuesToBeEdited(this.editMode.editedItem);\r\n    }\r\n  }\r\n\r\n  setValuesToBeEdited(editedItem) {\r\n    this.productForm.patchValue(editedItem);\r\n    this.setImagesToBeEdited(editedItem);\r\n  }\r\n\r\n  getProductImageToBeShown() {\r\n    this.currentlyUploadedImageSrc=[];\r\n    this.productImagesToBeEdited= this.productService.getAllProductImagesToBeShown(this.productImages);\r\n  }\r\n\r\n  setImagesToBeEdited(editedItem) {\r\n    this.productImages = editedItem.productImages;\r\n    this.getProductImageToBeShown();\r\n  }\r\n\r\n  openAddProductModal(templateRef:TemplateRef<any>, editMode?): void{\r\n    this.setEditModeForAdd(editMode)\r\n    this.productForm.reset();\r\n    this.getCategories();\r\n    const config= this.commonService.getModalConfig(this.className);\r\n    this.modalRef = this.modalService.show(templateRef, config);\r\n  }\r\n\r\n  setEditModeForAdd(editMode) {\r\n    if(editMode==false) {\r\n      this.editMode.status=editMode;\r\n      this.resetProductImagesToBeEdited();\r\n    }\r\n  }\r\n\r\n  resetProductImagesToBeEdited() {\r\n    this.productImagesToBeEdited=[];\r\n  }\r\n    \r\n  getFiles(event) {\r\n    this.productImages=[];\r\n    this.currentlyUploadedImageSrc=[];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.productImages.push(event.target.files[i]);\r\n      this.setCurrentlyUploadedImgArr(event.target.files[i])\r\n    }\r\n  }\r\n\r\n  setCurrentlyUploadedImgArr(file) {\r\n    let imgSrc=URL.createObjectURL(file)\r\n    this.currentlyUploadedImageSrc.push(imgSrc);\r\n  }\r\n\r\n  submit(formVal): void{\r\n    \r\n    if(this.editMode && this.editMode.status) {\r\n      this.update(formVal);\r\n    }\r\n    else {\r\n      this.save(formVal);\r\n    }\r\n  }\r\n\r\n  setAllFilesInFormData(formData) {\r\n    if(Array.isArray(this.productImages)) {\r\n      for(let i=0;i<this.productImages.length;i++) {\r\n        formData.append('files',this.productImages[i]); \r\n      }\r\n    }\r\n    else {\r\n      formData.append('productImages', this.productImages);\r\n    }\r\n  } \r\n\r\n  setFormDetailsInFormData(formData, data) {\r\n    for (const property in data) {\r\n      \r\n      formData.append(property, data[property]);\r\n    }\r\n  }\r\n\r\n  save(data) {\r\n    let formData = new FormData();\r\n    this.setFilesAndFormDetails(formData, data);\r\n    this.loaderService.display(true);\r\n    this.productService.addProduct(formData).subscribe(response=>{\r\n      this.loaderService.display(false);\r\n      this.handleProductChangeEvent(data);\r\n    })\r\n  }\r\n\r\n  setFilesAndFormDetails(formData, data) {\r\n    this.setAllFilesInFormData(formData);\r\n    this.setFormDetailsInFormData(formData, data);\r\n  }\r\n\r\n  update(data) {\r\n    let formData = new FormData();\r\n    this.setFilesAndFormDetails(formData, data);\r\n    this.loaderService.display(true);\r\n    this.productService.updateProduct(formData, data).subscribe(response=>{\r\n      this.loaderService.display(false);\r\n      this.handleProductChangeEvent(this.editMode.editedItem);\r\n    })\r\n  }\r\n\r\n  handleProductChangeEvent(data) {\r\n    this.hideModalAndClearForm();\r\n    if(data.categoryId) {\r\n      this.commonService.refreshProductEvent(data);\r\n    }\r\n  }\r\n\r\n  hideModalAndClearForm() {\r\n    this.modalRef?.hide();\r\n    this.productForm.reset();\r\n    this.productImages = [];\r\n  }\r\n\r\n  getCategories() {\r\n    this.categories = this.commonService.getCategories();\r\n  }\r\n}\r\n","<!-- add product button -->\r\n<button *ngIf=\"isAdmin\" class=\"btn btn-outline btn-light btn-light-default\"\r\n    (click)=\"openAddProductModal(addProductTemplate, false)\">+ add\r\n    product</button>\r\n<!-- add product modal  -->\r\n<ng-template #addProductTemplate>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Add Product</h4>\r\n        <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"modalRef?.hide()\">\r\n            <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form class=\"add-product-form\" [formGroup]=\"productForm\" (ngSubmit)=\"submit(productForm.value)\">\r\n\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"type\" class=\"col-3 col-form-label\">Category</label>\r\n                        <div class=\"col-9\">\r\n                            <select id=\"type\" name=\"type\" class=\"custom-select\" formControlName=\"categoryId\">\r\n                                <option *ngFor=\"let item of categories\" [value]=\"item._id\">{{item.categoryName}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Name</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"productName\" />\r\n                            <div *ngIf=\"productForm.controls['productName'].errors?.required && productForm.controls['productName'].touched\"\r\n                                class=\"error-message\">Please fill name.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Shlok</label>\r\n                        <div class=\"col-9\">\r\n                            <textarea class=\"form-control\" type=\"text\" formControlName=\"shlok\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Description</label>\r\n                        <div class=\"col-9\">\r\n                            <textarea class=\"form-control\" type=\"text\" formControlName=\"description\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Reference</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"references\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">dosage</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"dosage\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Indications</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"indications\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Contra-indications</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"contraIndications\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Sanskrit Name</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"sanskritName\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Botanical Name</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"botanicalName\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Drug Quantity</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"drugQuantity\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Stock</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"number\" formControlName=\"stock\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Price</label>\r\n                        <div class=\"col-9\">\r\n                            <input class=\"form-control\" type=\"number\" formControlName=\"price\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mobile-field col-12 col-md-6\">\r\n                    <div class=\"row\">\r\n                        <label for=\"text\" class=\"col-3 col-form-label\">Product Images</label>\r\n                        <div class=\"col-9\">\r\n                            <label class=\"custom-upload-btn btn-light btn-light-default\" for=\"upload\">Choose file\r\n                                <input type=\"file\" class=\"file-upload\" multiple (change)=\"getFiles($event)\">\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!--below code to be edited-->\r\n            <div class=\"form-group product-img-container row\" *ngIf=\"currentlyUploadedImageSrc.length==0\">\r\n                <div class=\"col-4\" *ngFor=\"let item of this.productImagesToBeEdited;let i=index\">\r\n                    <img class=\"product-img\" src='{{item}}' />\r\n                </div>\r\n                <!-- <div class=\"col-4\" *ngIf=\"!this.productImagesToBeEdited\">\r\n                    <img class=\"product-img\" src=\"./../../../assets/images/herbal-med.jpg\" />\r\n                </div> -->\r\n            </div>\r\n            <div class=\"form-group product-img-container row\" *ngIf=\"currentlyUploadedImageSrc.length>0\">\r\n                <div class=\"img-container col-12 col-md-4\" *ngFor=\"let item of this.productImages;let i=index\">\r\n                    <img class=\"product-img\" [src]=\"currentlyUploadedImageSrc[i] | safeResourceUrl\" />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group row\">\r\n                <div class=\"offset-2 col-4\">\r\n                    <button name=\"submit\" type=\"submit\" class=\"btn btn-outline-modal btn-full-width\">Save</button>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                    <button name=\"submit\" type=\"button\" class=\"btn btn-outline-removebtn btn-full-width\"\r\n                        (click)=\"modalRef?.hide()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</ng-template>","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { CommonService } from 'src/app/services/common-service/common.service';\r\nimport { ProductService } from 'src/app/services/product-service/product.service';\r\nimport { CarouselConfig } from 'ngx-bootstrap/carousel';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { CartService } from 'src/app/services/cart-service/cart.service';\r\nimport { ConfirmOrderDetailsComponent } from '../confirm-order-details/confirm-order-details.component';\r\nimport { OrderService } from 'src/app/services/order-service/order.service';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Component({\r\n  selector: 'app-product-description',\r\n  templateUrl: './product-description.component.html',\r\n  styleUrls: ['./product-description.component.scss'],\r\n  providers: [\r\n    { provide: CarouselConfig, useValue: { showIndicators: true } }\r\n  ]\r\n})\r\nexport class ProductDescriptionComponent implements OnInit {\r\n  @Input() product; \r\n  modalRefProductDescription?: BsModalRef;\r\n  modalRefOrderConfirmation?: BsModalRef;\r\n  productImages: any;\r\n  productImagesToBeEdited: any;\r\n  className = 'product-description-modalcontainer'\r\n  currentCurrency: string;\r\n  orderConfirmationClass: string;\r\n  outOfStockText: string;\r\n  sellerStocksEmptyText: string;\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private productService: ProductService,\r\n    private commonService: CommonService,\r\n    private loaderService: LoaderService,\r\n    private cartService: CartService,\r\n    private orderService: OrderService,\r\n    private notifierService: NotifierService\r\n    ) { \r\n      this.outOfStockText = this.commonService.outOfStockText;\r\n      this.sellerStocksEmptyText = this.commonService.sellerStocksEmptyText;\r\n      this.orderConfirmationClass = this.commonService.orderConfirmationClass;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentCurrency();\r\n    this.setProductQuantityIfNull();\r\n  }\r\n\r\n  openProductDescriptionModal(templateRef:TemplateRef<any>): void{\r\n    const config= this.commonService.getModalConfig(this.className);\r\n    this.modalRefProductDescription = this.modalService.show(templateRef, config);\r\n    this.getProductImageToBeShown();\r\n  }\r\n  \r\n  setCurrentCurrency() {\r\n    this.currentCurrency = this.commonService.currentCurrency;\r\n  }\r\n\r\n  getProductImageToBeShown() {\r\n    this.productImages= this.productService.getAllProductImagesToBeShown(this.product.productImages);\r\n  }\r\n\r\n  addToCart(product) {\r\n    if(this.commonService.checkIfVisitorAndNavigate()) {\r\n      this.modalRefProductDescription.hide();\r\n      this.commonService.navigateToLoginPage();\r\n   }\r\n   else {\r\n      let data = product;\r\n      this.commonService.addUserDetails(data);\r\n      this.loaderService.display(true);\r\n      this.cartService.addToCartList(data).subscribe(response=>{\r\n        this.loaderService.display(false);\r\n       \r\n        this.cartService.cartItemChange.next();\r\n      })\r\n    }\r\n  }\r\n\r\n  changeQty(product) {\r\n    \r\n  }\r\n \r\n  setProductQuantityIfNull() {\r\n    if(!this.product.quantity) {\r\n      this.product.quantity = 1;\r\n    }\r\n  }\r\n\r\n  decrementQuantity(product) {\r\n    if(product.quantity >0) {\r\n       product.quantity -= 1;\r\n    }\r\n  }\r\n\r\n  incrementQuantity(product) {\r\n    product.quantity += 1;\r\n  }\r\n\r\n  openOrderConfirmationModal(product): void{\r\n    if(this.commonService.checkIfVisitorAndNavigate()) {\r\n      this.modalRefProductDescription.hide();\r\n      this.commonService.navigateToLoginPage();\r\n   }\r\n   else {\r\n      this.modalRefProductDescription.hide();\r\n      this.commonService.addUserDetails(product);\r\n      const initialState: any = {\r\n        initialState: {\r\n          product\r\n        },\r\n        class: this.orderConfirmationClass\r\n      };\r\n      const config= this.commonService.getModalConfig(this.orderConfirmationClass);\r\n      this.modalRefOrderConfirmation = this.modalService.show(ConfirmOrderDetailsComponent, initialState);\r\n      this.modalRefOrderConfirmation.content.event.subscribe(data=>{\r\n        this.placeOrder(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  placeOrder(cartItem) {\r\n    this.loaderService.display(true);\r\n    this.orderService.addToOrderList(cartItem).subscribe(response=>{\r\n      this.loaderService.display(false);\r\n      this.notifierService.notify('success', 'Order placed successfully!');\r\n      this.modalRefProductDescription.hide();\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"product-name product-name-link\" (click)=\"openProductDescriptionModal(productDescriptionTemplate)\">{{product.productName}}\r\n</div>\r\n\r\n<!-- product description modal  -->\r\n<ng-template #productDescriptionTemplate>\r\n    <div class=\"modal-header\">\r\n        <!-- <h4 class=\"modal-title pull-left\">Product description</h4> -->\r\n        <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"modalRefProductDescription?.hide()\">\r\n            <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body product-description-modal\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-7 col-xs-12\">\r\n                <div class=\"carousel-container\" *ngIf=\"this.productImages\">\r\n                    <carousel>\r\n                        <slide *ngFor=\"let item of this.productImages;let i=index\">\r\n                            <img src=\"{{item}}\" alt=\"first slide\" style=\"display: block; width: 100%;\">\r\n                        </slide>\r\n                    </carousel>\r\n                </div>\r\n                <div class=\"product-image-container\" *ngIf=\"!this.productImages\">\r\n                    <img class=\"product-image\" src=\"assets/images/herbal-med.jpg\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-5 col-xs-12\">\r\n                <div class=\"product-details\">\r\n                    <div class=\"product-name\">{{product.productName}}</div>\r\n                    <div class=\"product-description\">{{product.description}}</div>\r\n                    <div class=\"product-price\">\r\n                        <span class=\"current-currency-symbol\">{{currentCurrency}}</span>\r\n                        <span class=\"price-value\">{{product.price}}</span>\r\n                    </div>\r\n\r\n                    <div class=\"row drug-quantity-container\"\r\n                        *ngIf=\"product.drugQuantity && product.drugQuantity !== 'null'\">\r\n                        <div class=\"col-12 quantity-title\">Drug quantity</div>\r\n                        <div class=\"col-12 drug-quantityvalue-container\">\r\n                            <span class=\"drug-quantity-value\">{{product.drugQuantity}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row quantity-container\" *ngIf=\"product.stock > 0\">\r\n                        <div class=\"col-12 quantity-title\">Quantity</div>\r\n                        <div class=\"input-group col-md-4 col-5\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <button class=\"input-group-text\" (click)=\"decrementQuantity(product)\">-</button>\r\n                            </div>\r\n                            <input type=\"text\" class=\"qty-input form-control\" [(ngModel)]='product.quantity' value=\"1\"\r\n                                id=\"input1\" placeholder=\"Qty\">\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"input-group-text\" [disabled]=\"(product.quantity >= product.stock)\" [attr.title]=\"(product.quantity >= product.stock) ? sellerStocksEmptyText : '' \"  (click)=\"incrementQuantity(product)\">+</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"user-action-btns row\" *ngIf=\"product.stock > 0\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-primary btn-outline add-to-cart add-cart-btn\"\r\n                                (click)=\"addToCart(product)\">Add to\r\n                                cart</button>\r\n                            <button class=\"btn btn-primary btn-outline-customsecondary add-to-cart buy-btn\"\r\n                                (click)=\"openOrderConfirmationModal(product)\" value=\"1\">Buy now</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row out-of-stock\" *ngIf=\"product.stock <= 0\">\r\n                        <span class=\"out-of-stock-text\">{{outOfStockText}}</span>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryMenuComponent } from 'src/app/partial_views/category-menu/category-menu.component';\r\nimport { CommonService } from 'src/app/services/common-service/common.service';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { ProductService } from 'src/app/services/product-service/product.service';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { CartService } from 'src/app/services/cart-service/cart.service';\r\nimport { OrderService } from 'src/app/services/order-service/order.service';\r\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { ConfirmOrderDetailsComponent } from '../modals/confirm-order-details/confirm-order-details.component';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  orderConfirmationClass: string;\r\n  outOfStockText: string;\r\n  products: any;\r\n  categoryId;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  isAllCategorySelected = true;\r\n  editMode = { \r\n    status: false, \r\n    editedItem: {} \r\n  };\r\n  isAdmin = false;\r\n  unfilteredProducts: any;\r\n  currentCurrency: string;\r\n  modalRef: BsModalRef;\r\n  sellerStocksEmptyText: string;\r\n  isFireCrackerShown = false;\r\n  \r\n  constructor(\r\n    private loaderService: LoaderService,\r\n    private productService: ProductService,\r\n    private commonService: CommonService,\r\n    private cartService: CartService,\r\n    private orderService: OrderService,\r\n    private modalService: BsModalService,\r\n    private notifierService: NotifierService\r\n    ) { \r\n      this.outOfStockText = this.commonService.outOfStockText;\r\n      this.sellerStocksEmptyText = this.commonService.sellerStocksEmptyText;\r\n      this.orderConfirmationClass = this.commonService.orderConfirmationClass;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.setPrivileges();\r\n    this.handleSubscriptions();\r\n    this.handleProductSearchSubsriptions();\r\n    this.setCurrentCurrency();\r\n  }\r\n\r\n  setPrivileges() {\r\n    this.isAdmin = this.commonService.userDetails.isAdmin;\r\n  }\r\n\r\n  setCurrentCurrency() {\r\n    this.currentCurrency = this.commonService.currentCurrency;\r\n  }\r\n\r\n  handleSubscriptions() {\r\n    this.commonService.refreshProduct.subscribe(data=>{\r\n      if(data && data['isAllCategorySelected']) {\r\n         this.isAllCategorySelected = true;\r\n         this.getAllProducts();\r\n      }\r\n      else {\r\n        this.isAllCategorySelected = false;\r\n        this.setCategoryIdParamIfNotAvailable(data);\r\n        this.getProducts(data['categoryId']);\r\n      }\r\n    })\r\n  \r\n  }\r\n\r\n  handleProductSearchSubsriptions() {\r\n    this.productService.productDataSearch.subscribe(data=>{\r\n       this.products = this.commonService.filterDataBySearchString(this.unfilteredProducts,data);\r\n    })\r\n  }\r\n\r\n  setCategoryIdParamIfNotAvailable(data) {\r\n     if(!data.categoryId) {\r\n        data.categoryId = data['_id'];\r\n     }\r\n  }\r\n\r\n  getProducts(data?) {\r\n    this.loaderService.display(true);\r\n    this.productService.getProductListByCategoryId(data).subscribe(data=>{\r\n       this.products = data;\r\n       this.unfilteredProducts = data;\r\n       this.loaderService.display(false);\r\n    })\r\n  }\r\n\r\n  getAllProducts() {\r\n    this.loaderService.display(true);\r\n    this.productService.getAllProductList().subscribe(data=>{\r\n      this.products = data;\r\n      this.unfilteredProducts = data;\r\n      this.loaderService.display(false);\r\n    })\r\n  }\r\n\r\n  deleteProduct(data) {\r\n    let result=this.commonService.confirmAction();\r\n    if(result) {\r\n    this.loaderService.display(true);\r\n    this.productService.deleteProduct(data._id).subscribe(response=>{\r\n      this.checkAndLoadProductsByCategory(data);\r\n      this.loaderService.display(false);\r\n    })\r\n   }\r\n  }\r\n\r\n  checkAndLoadProductsByCategory(data) {\r\n    if(this.isAllCategorySelected) {\r\n      this.getAllProducts();\r\n    }\r\n    else {\r\n      this.getProducts(data['categoryId']);\r\n    }\r\n  }\r\n\r\n  editProduct(item){\r\n    let editedItem=JSON.parse(JSON.stringify(item));\r\n    this.editMode={ \r\n      status: true,\r\n      editedItem: editedItem\r\n    };\r\n  }\r\n\r\n  getProductImageToBeShown(productImage) {\r\n    return this.productService.getProductImageToBeShown(productImage);\r\n  }\r\n\r\n  addToCart(product) {\r\n    if(this.commonService.checkIfVisitorAndNavigate()) {\r\n       this.commonService.navigateToLoginPage();\r\n    }\r\n    else {\r\n      this.setProductId(product);\r\n      let data = product;\r\n      this.commonService.addUserDetails(data);\r\n      this.loaderService.display(true);\r\n      this.cartService.addToCartList(data).subscribe(response=>{\r\n        this.loaderService.display(false);\r\n        this.cartService.cartItemChange.next();\r\n      })\r\n    }\r\n  }\r\n\r\n  setProductId(product) {\r\n    product.productId = product._id;\r\n  }\r\n\r\n  changeQty(product) {\r\n    \r\n  }\r\n\r\n  receiveProductAddEvent(data) {\r\n\r\n  }\r\n\r\n  receiveCategoryAddEvent() {\r\n    \r\n  }\r\n\r\n  openOrderConfirmationModal(product): void{\r\n    if(this.commonService.checkIfVisitorAndNavigate()) {\r\n      this.commonService.navigateToLoginPage();\r\n   }\r\n   else {\r\n      this.commonService.addUserDetails(product);\r\n      const initialState: any = {\r\n        initialState: {\r\n          product\r\n        },\r\n        class: this.orderConfirmationClass\r\n      };\r\n      const config= this.commonService.getModalConfig(this.orderConfirmationClass);\r\n      this.modalRef = this.modalService.show(ConfirmOrderDetailsComponent, initialState);\r\n      this.modalRef.content.event.subscribe(data=>{\r\n        this.placeOrder(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  placeOrder(cartItem) {\r\n    this.loaderService.display(true);\r\n    this.orderService.addToOrderList(cartItem).subscribe(response=>{\r\n      this.loaderService.display(false);\r\n      this.notifierService.notify('success', 'Order placed successfully!');\r\n      this.showFireCrackers();\r\n    })\r\n  }\r\n\r\n  decrementQuantity(product) {\r\n    if(product.quantity >0) {\r\n       product.quantity -= 1;\r\n    }\r\n  }\r\n\r\n  incrementQuantity(product) {\r\n    product.quantity += 1;\r\n  }\r\n\r\n  showFireCrackers() {\r\n    this.isFireCrackerShown= true;\r\n    setTimeout(()=>{\r\n      this.isFireCrackerShown = false;\r\n    },this.commonService.fireCrackersTimeout);\r\n  }\r\n}\r\n","<div class=\"pyro\" *ngIf=\"isFireCrackerShown\">\r\n    <div class=\"before\"></div>\r\n    <div class=\"after\"></div>\r\n</div>\r\n<h2 class=\"page-heading\">Products</h2>\r\n<div class=\"product-page-container\">\r\n    <div class=\"row\">\r\n        <!-- <div class=\"col-md-12 col-xs-12 col-12\"> -->\r\n        <div class=\"col-md-2 col-4 d-none d-md-block\">\r\n            <app-category-menu></app-category-menu>\r\n        </div>\r\n        <div class=\"col-md-10 col-12 product-list-container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3 addproduct-btn-container\">\r\n                    <!-- add product modal -->\r\n                    <app-add-product class=\"add-product-container\" [editMode]=\"editMode\"\r\n                        (productAddEvent)=\"receiveProductAddEvent($event)\"></app-add-product>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-3 col-sm-12 col-xs-12 col-12 product-list-item-container\"\r\n                    *ngFor=\"let product of products\">\r\n                    <div class=\"product-list-item\">\r\n\r\n                        <div class=\"product-img-container\">\r\n                            <img *ngIf=\"product.productImages && product.productImages[0]\" class=\"product-img\"\r\n                                src='{{getProductImageToBeShown(product.productImages)}}' />\r\n                            <img *ngIf=\"!(product.productImages && product.productImages[0])\" class=\"product-img\"\r\n                                src=\"./../../../assets/images/herbal-med.jpg\" />\r\n                        </div>\r\n                        <div class=\"img-details-container\">\r\n                            <div class=\"product-name\">\r\n                                <!-- product description modal -->\r\n                                <app-product-description [product]=product></app-product-description>\r\n                            </div>\r\n                            <div class=\"product-description\">{{product.description}}</div>\r\n                            <div class=\"product-price\">\r\n                                <span class=\"current-currency-symbol\">{{currentCurrency}}</span>\r\n                                <span class=\"price-value\">{{product.price}}</span>\r\n                            </div>\r\n                            <div class=\"user-action-btns row\" *ngIf=\"product.stock > 0\">\r\n                                <div class=\"input-group col-md-5 col-4\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <button class=\"input-group-text\" (click)=\"decrementQuantity(product)\">-</button>\r\n                                    </div>\r\n                                    <input type=\"text\" class=\"qty-input form-control\" [(ngModel)]='product.quantity'\r\n                                        value=\"1\" id=\"input1\" placeholder=\"Qty\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <button class=\"input-group-text\" [disabled]=\"(product.quantity >= product.stock)\" [attr.title]=\"(product.quantity >= product.stock) ? sellerStocksEmptyText : '' \"  (click)=\"incrementQuantity(product)\">+</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row cart-buy-btncontainer\" *ngIf=\"product.stock > 0\">\r\n                                <button class=\"col-5 btn btn-outline add-to-cart add-cart-btn\"\r\n                                (click)=\"addToCart(product)\">\r\n                                Add to cart\r\n                            </button>\r\n                            <button class=\"col-6 btn btn-outline-customsecondary add-to-cart buy-btn\"\r\n                                (click)=\"openOrderConfirmationModal(product)\" value=\"1\">Buy now</button>\r\n                            </div> \r\n                            <div class=\"row out-of-stock\" *ngIf=\"product.stock <= 0\">\r\n                                 <span class=\"out-of-stock-text\">{{outOfStockText}}</span>\r\n                            </div>\r\n                            <div class=\"admin-btn\">\r\n                                <span class=\"edit-delete-btncontainer\" *ngIf=\"isAdmin\">\r\n                                    <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faEdit\"\r\n                                        (click)=\"editProduct(product)\">\r\n                                    </fa-icon>\r\n                                    <fa-icon class=\"hand-cursor delete-icon\" [icon]=\"faTrash\"\r\n                                        (click)=\"deleteProduct(product)\">\r\n                                    </fa-icon>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- </div> -->\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\n\r\nconst routes: Routes = [\r\n  // {\r\n  //   path: 'updateInterviewQuestions',\r\n  //   component: InterviewQuestionsPanelComponent\r\n  // },\r\n  {\r\n    path:'',\r\n    component: ProductListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class ProductsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { AddProductComponent } from './modals/add-product/add-product.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ProductDescriptionComponent } from './modals/product-description/product-description.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { SafeResourceUrlPipe } from './../pipes/safe-resource-url.pipe';\r\nimport { ConfirmOrderDetailsComponent } from './modals/confirm-order-details/confirm-order-details.component';\r\nimport { CategoryMenuModule } from '../partial_views/category-menu/category-menu.module';\r\nimport { AddCategoryModule } from './modals/add-category/add-category.module';\r\nimport { SharedModule } from '../shared-module/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductListComponent,\r\n    AddProductComponent,\r\n    ProductDescriptionComponent,\r\n    ConfirmOrderDetailsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    ProductsRoutingModule,\r\n    ReactiveFormsModule,\r\n    CategoryMenuModule,\r\n    AddCategoryModule,\r\n    CarouselModule.forRoot(),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ProductsModule { }\r\n"]}