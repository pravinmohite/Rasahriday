{"version":3,"sources":["webpack:///node_modules/ngx-bootstrap/__ivy_ngcc__/carousel/fesm2015/ngx-bootstrap-carousel.js"],"names":["CarouselComponent_ol_1_li_1_Template","rf","ctx","_r7","CarouselComponent_ol_1_li_1_Template_li_click_0_listener","i_r5","index","ctx_r6","selectSlide","slide_r4","$implicit","active","CarouselComponent_ol_1_Template","ctx_r0","indicatorsSlides","CarouselComponent_a_4_span_2_Template","CarouselComponent_a_4_Template","_r10","CarouselComponent_a_4_Template_a_click_0_listener","ctx_r9","previousSlide","ctx_r1","activeSlide","noWrap","isBs4","CarouselComponent_a_5_Template","_r12","CarouselComponent_a_5_Template_a_click_0_listener","ctx_r11","nextSlide","ctx_r2","isLast","_c0","a0","_c1","CarouselConfig","interval","noPause","showIndicators","pauseOnFocus","indicatorsByChunk","itemsPerSlide","singleSlideOffset","ɵfac","CarouselConfig_Factory","t","ɵprov","factory","token","providedIn","type","args","findLastIndex","array","predicate","l","length","chunkByNumber","size","out","n","Math","ceil","i","chunk","splice","push","Direction","UNKNOWN","NEXT","PREV","CarouselComponent","config","ngZone","isAnimated","activeSlideChange","slideRangeChange","startFromIndex","_slides","_currentVisibleSlidesIndex","destroyed","getActive","slide","makeSlidesConsistent","slides","forEach","item","order","Object","assign","_currentActiveSlide","multilist","_select","_interval","value","restartTimer","toArray","setTimeout","_chunkedSlides","mapSlidesAndIndexes","selectInitialSlides","add","undefined","play","remIndex","indexOf","nextSlideIndex","remove","currentSlideIndex","getCurrentSlideIndex","emit","force","move","isPlaying","findIndex","direction","firstVisibleIndex","getFirstVisibleIndex","lastVisibleIndex","getLastVisibleIndex","findNextSlideIndex","moveMultilist","event","keyCode","key","preventDefault","resetTimer","selectSlideRange","filter","startIndex","hideSlides","_slidesWithIndexes","slidesToAppend","slice","selectRangeByNestedIndex","getVisibleIndexes","Error","map","isIndexInRange","isIndexOnTheEdges","endIndex","selectedRange","slidesList","list","find","visibleIndexes","indexToHide","indexToShow","get","slidesToReorder","displayedIndex","shift","pop","isFirst","moveSliderByOneItem","isVisibleSlideListLast","isVisibleSlideListFirst","isNaN","pause","currentSlide","currentInterval","runOutsideAngular","setInterval","nInterval","run","nextSlideFromInterval","clearInterval","CarouselComponent_Factory","ɵcmp","selectors","inputs","outputs","ngContentSelectors","decls","vars","consts","template","CarouselComponent_Template","CarouselComponent_Template_div_mouseenter_0_listener","CarouselComponent_Template_div_mouseleave_0_listener","onMouseLeave","CarouselComponent_Template_div_mouseup_0_listener","onMouseUp","CarouselComponent_Template_div_keydown_0_listener","$event","keydownPress","CarouselComponent_Template_div_focusin_0_listener","pauseFocusIn","CarouselComponent_Template_div_focusout_0_listener","pauseFocusOut","directives","encapsulation","ctorParameters","propDecorators","selector","SlideComponent","carousel","itemWidth","addClass","addSlide","removeSlide","SlideComponent_Factory","hostVars","hostBindings","SlideComponent_HostBindings","SlideComponent_Template","styles","host","CarouselModule","ngModule","providers","ɵmod","ɵinj","CarouselModule_Factory","imports","ngJitMode","declarations","exports"],"mappings":"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","file":"default~cart-cart-module~landing-page-landing-page-module~order-order-module~products-products-module-es5.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, NgZone, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { LinkedList, isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction CarouselComponent_ol_1_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_1_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const i_r5 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.selectSlide(i_r5); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.active === true);\n} }\nfunction CarouselComponent_ol_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_li_1_Template, 1, 2, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.indicatorsSlides());\n} }\nfunction CarouselComponent_a_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵtext(1, \"Previous\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction CarouselComponent_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.previousSlide(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(2, CarouselComponent_a_4_span_2_Template, 2, 0, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.activeSlide === 0 && ctx_r1.noWrap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isBs4);\n} }\nfunction CarouselComponent_a_5_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_5_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.nextSlide(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 11);\n    ɵngcc0.ɵɵtext(3, \"Next\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r2.isLast(ctx_r2.activeSlide) && ctx_r2.noWrap);\n} }\nconst _c0 = function (a0) { return { \"display\": a0 }; };\nconst _c1 = [\"*\"];\nclass CarouselConfig {\n    constructor() {\n        /* Default interval of auto changing of slides */\n        this.interval = 5000;\n        /* Is loop of auto changing of slides can be paused */\n        this.noPause = false;\n        /* Is slides can wrap from the last to the first slide */\n        this.noWrap = false;\n        /* Show carousel-indicators */\n        this.showIndicators = true;\n        /* Slides can be paused on focus */\n        this.pauseOnFocus = false;\n        /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n            of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n    }\n}\nCarouselConfig.ɵfac = function CarouselConfig_Factory(t) { return new (t || CarouselConfig)(); };\n/** @nocollapse */ CarouselConfig.ɵprov = ɵɵdefineInjectable({ factory: function CarouselConfig_Factory() { return new CarouselConfig(); }, token: CarouselConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    CarouselConfig.prototype.interval;\n    /** @type {?} */\n    CarouselConfig.prototype.noPause;\n    /** @type {?} */\n    CarouselConfig.prototype.noWrap;\n    /** @type {?} */\n    CarouselConfig.prototype.showIndicators;\n    /** @type {?} */\n    CarouselConfig.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselConfig.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselConfig.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselConfig.prototype.singleSlideOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @template T\n * @param {?} array The source array to search in\n * @param {?} predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n * @return {?}\n */\nfunction findLastIndex(array, predicate) {\n    /** @type {?} */\n    let l = array.length;\n    while (l--) {\n        if (predicate(array[l], l, array)) {\n            return l;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} array\n * @param {?} size\n * @return {?}\n */\nfunction chunkByNumber(array, size) {\n    /** @type {?} */\n    const out = [];\n    /** @type {?} */\n    const n = Math.ceil((array.length) / size);\n    /** @type {?} */\n    let i = 0;\n    while (i < n) {\n        /** @type {?} */\n        const chunk = array.splice(0, (i === n - 1) && size < array.length ? array.length : size);\n        out.push(chunk);\n        i++;\n    }\n    return out;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Direction = {\n    UNKNOWN: 0,\n    NEXT: 1,\n    PREV: 2,\n};\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\nDirection[Direction.NEXT] = 'NEXT';\nDirection[Direction.PREV] = 'PREV';\n/**\n * Base element to create carousel\n */\nclass CarouselComponent {\n    /**\n     * @param {?} config\n     * @param {?} ngZone\n     */\n    constructor(config, ngZone) {\n        this.ngZone = ngZone;\n        /* If `true` - carousel indicators indicate slides chunks\n             works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n             of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n        /**\n         * Turn on/off animation. Animation doesn't work for multilist carousel\n         */\n        this.isAnimated = false;\n        /**\n         * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n         */\n        this.activeSlideChange = new EventEmitter(false);\n        /**\n         * Will be emitted when active slides has been changed in multilist mode\n         */\n        this.slideRangeChange = new EventEmitter();\n        /* Index to start display slides from it */\n        this.startFromIndex = 0;\n        this._slides = new LinkedList();\n        this._currentVisibleSlidesIndex = 0;\n        this.destroyed = false;\n        this.getActive = (/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active);\n        this.makeSlidesConsistent = (/**\n         * @param {?} slides\n         * @return {?}\n         */\n        (slides) => {\n            slides.forEach((/**\n             * @param {?} slide\n             * @param {?} index\n             * @return {?}\n             */\n            (slide, index) => slide.item.order = index));\n        });\n        Object.assign(this, config);\n    }\n    /**\n     * Index of currently displayed slide(started for 0)\n     * @param {?} index\n     * @return {?}\n     */\n    set activeSlide(index) {\n        if (this.multilist) {\n            return;\n        }\n        if (this._slides.length && index !== this._currentActiveSlide) {\n            this._select(index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get activeSlide() {\n        return this._currentActiveSlide;\n    }\n    /**\n     * Delay of item cycling in milliseconds. If false, carousel won't cycle\n     * automatically.\n     * @return {?}\n     */\n    get interval() {\n        return this._interval;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set interval(value) {\n        this._interval = value;\n        this.restartTimer();\n    }\n    /**\n     * @return {?}\n     */\n    get slides() {\n        return this._slides.toArray();\n    }\n    /**\n     * @return {?}\n     */\n    get isBs4() {\n        return !isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.singleSlideOffset) {\n                this.indicatorsByChunk = false;\n            }\n            if (this.multilist) {\n                this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);\n                this.selectInitialSlides();\n            }\n        }), 0);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed = true;\n    }\n    /**\n     * Adds new slide. If this slide is first in collection - set it as active\n     * and starts auto changing\n     * @param {?} slide\n     * @return {?}\n     */\n    addSlide(slide) {\n        this._slides.add(slide);\n        if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n            slide.active = true;\n        }\n        if (!this.multilist && this.isAnimated) {\n            slide.isAnimated = true;\n        }\n        if (!this.multilist && this._slides.length === 1) {\n            this._currentActiveSlide = undefined;\n            this.activeSlide = 0;\n            this.play();\n        }\n        if (this.multilist && this._slides.length > this.itemsPerSlide) {\n            this.play();\n        }\n    }\n    /**\n     * Removes specified slide. If this slide is active - will roll to another\n     * slide\n     * @param {?} slide\n     * @return {?}\n     */\n    removeSlide(slide) {\n        /** @type {?} */\n        const remIndex = this._slides.indexOf(slide);\n        if (this._currentActiveSlide === remIndex) {\n            // removing of active slide\n            /** @type {?} */\n            let nextSlideIndex = void 0;\n            if (this._slides.length > 1) {\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                nextSlideIndex = !this.isLast(remIndex)\n                    ? remIndex\n                    : this.noWrap ? remIndex - 1 : 0;\n            }\n            this._slides.remove(remIndex);\n            // prevents exception with changing some value after checking\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._select(nextSlideIndex);\n            }), 0);\n        }\n        else {\n            this._slides.remove(remIndex);\n            /** @type {?} */\n            const currentSlideIndex = this.getCurrentSlideIndex();\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // after removing, need to actualize index of current active slide\n                this._currentActiveSlide = currentSlideIndex;\n                this.activeSlideChange.emit(this._currentActiveSlide);\n            }), 0);\n        }\n    }\n    /**\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlideFromInterval(force = false) {\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to next slide\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to previous slide\n     * @param {?=} force\n     * @return {?}\n     */\n    previousSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.PREV, force);\n    }\n    /**\n     * @return {?}\n     */\n    getFirstVisibleIndex() {\n        return this.slides.findIndex(this.getActive);\n    }\n    /**\n     * @return {?}\n     */\n    getLastVisibleIndex() {\n        return findLastIndex(this.slides, this.getActive);\n    }\n    /**\n     * @param {?} direction\n     * @param {?=} force\n     * @return {?}\n     */\n    move(direction, force = false) {\n        /** @type {?} */\n        const firstVisibleIndex = this.getFirstVisibleIndex();\n        /** @type {?} */\n        const lastVisibleIndex = this.getLastVisibleIndex();\n        if (this.noWrap) {\n            if (direction === Direction.NEXT &&\n                this.isLast(lastVisibleIndex) ||\n                direction === Direction.PREV &&\n                    firstVisibleIndex === 0) {\n                return;\n            }\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.findNextSlideIndex(direction, force);\n        }\n        else {\n            this.moveMultilist(direction);\n        }\n    }\n    /**\n     * Swith slides by enter, space and arrows keys\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    keydownPress(event) {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            this.nextSlide();\n            event.preventDefault();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            this.previousSlide();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            this.nextSlide();\n            return;\n        }\n    }\n    /**\n     * Play on mouse leave\n     * \\@internal\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * Play on mouse up\n     * \\@internal\n     * @return {?}\n     */\n    onMouseUp() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * When slides on focus autoplay is stopped(optional)\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusIn() {\n        if (this.pauseOnFocus) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * When slides out of focus autoplay is started\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusOut() {\n        this.play();\n    }\n    /**\n     * Rolling to specified slide\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlide(index) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n        }\n        else {\n            this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n        }\n    }\n    /**\n     * Starts a auto changing of slides\n     * @return {?}\n     */\n    play() {\n        if (!this.isPlaying) {\n            this.isPlaying = true;\n            this.restartTimer();\n        }\n    }\n    /**\n     * Stops a auto changing of slides\n     * @return {?}\n     */\n    pause() {\n        if (!this.noPause) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * Finds and returns index of currently displayed slide\n     * @return {?}\n     */\n    getCurrentSlideIndex() {\n        return this._slides.findIndex(this.getActive);\n    }\n    /**\n     * Defines, whether the specified index is last in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isLast(index) {\n        return index + 1 >= this._slides.length;\n    }\n    /**\n     * Defines, whether the specified index is first in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isFirst(index) {\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    indicatorsSlides() {\n        return this.slides.filter((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    selectInitialSlides() {\n        /** @type {?} */\n        const startIndex = this.startFromIndex <= this._slides.length\n            ? this.startFromIndex\n            : 0;\n        this.hideSlides();\n        if (this.singleSlideOffset) {\n            this._slidesWithIndexes = this.mapSlidesAndIndexes();\n            if (this._slides.length - startIndex < this.itemsPerSlide) {\n                /** @type {?} */\n                const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n                this._slidesWithIndexes = [\n                    ...this._slidesWithIndexes,\n                    ...slidesToAppend\n                ]\n                    .slice(slidesToAppend.length)\n                    .slice(0, this.itemsPerSlide);\n            }\n            else {\n                this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\n            }\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n        }\n        else {\n            this.selectRangeByNestedIndex(startIndex);\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * Defines next slide index, depending of direction\n     * @private\n     * @param {?} direction\n     * @param {?} force\n     * @return {?}\n     */\n    findNextSlideIndex(direction, force) {\n        /** @type {?} */\n        let nextSlideIndex = 0;\n        if (!force &&\n            (this.isLast(this.activeSlide) &&\n                direction !== Direction.PREV &&\n                this.noWrap)) {\n            return undefined;\n        }\n        switch (direction) {\n            case Direction.NEXT:\n                // if this is last slide, not force, looping is disabled\n                // and need to going forward - select current slide, as a next\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\n                    ? this._currentActiveSlide + 1\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\n                break;\n            case Direction.PREV:\n                // if this is first slide, not force, looping is disabled\n                // and need to going backward - select current slide, as a next\n                nextSlideIndex =\n                    this._currentActiveSlide > 0\n                        ? this._currentActiveSlide - 1\n                        : !force && this.noWrap\n                            ? this._currentActiveSlide\n                            : this._slides.length - 1;\n                break;\n            default:\n                throw new Error('Unknown direction');\n        }\n        return nextSlideIndex;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    mapSlidesAndIndexes() {\n        return this.slides\n            .slice()\n            .map((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => {\n            return {\n                index,\n                item: slide\n            };\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlideRange(index) {\n        if (this.isIndexInRange(index)) {\n            return;\n        }\n        this.hideSlides();\n        if (!this.singleSlideOffset) {\n            this.selectRangeByNestedIndex(index);\n        }\n        else {\n            /** @type {?} */\n            const startIndex = this.isIndexOnTheEdges(index)\n                ? index\n                : index - this.itemsPerSlide + 1;\n            /** @type {?} */\n            const endIndex = this.isIndexOnTheEdges(index)\n                ? index + this.itemsPerSlide\n                : index + 1;\n            this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectRangeByNestedIndex(index) {\n        /** @type {?} */\n        const selectedRange = this._chunkedSlides\n            .map((/**\n         * @param {?} slidesList\n         * @param {?} i\n         * @return {?}\n         */\n        (slidesList, i) => {\n            return {\n                index: i,\n                list: slidesList\n            };\n        }))\n            .find((/**\n         * @param {?} slidesList\n         * @return {?}\n         */\n        (slidesList) => {\n            return slidesList.list.find((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.index === index)) !== undefined;\n        }));\n        this._currentVisibleSlidesIndex = selectedRange.index;\n        this._chunkedSlides[selectedRange.index].forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => {\n            slide.item.active = true;\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexOnTheEdges(index) {\n        return (index + 1 - this.itemsPerSlide <= 0 ||\n            index + this.itemsPerSlide <= this._slides.length);\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexInRange(index) {\n        if (this.singleSlideOffset) {\n            /** @type {?} */\n            const visibleIndexes = this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n            return visibleIndexes.indexOf(index) >= 0;\n        }\n        return (index <= this.getLastVisibleIndex() &&\n            index >= this.getFirstVisibleIndex());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hideSlides() {\n        this.slides.forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active = false));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListLast() {\n        return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListFirst() {\n        return this._currentVisibleSlidesIndex === 0;\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveSliderByOneItem(direction) {\n        /** @type {?} */\n        let firstVisibleIndex;\n        /** @type {?} */\n        let lastVisibleIndex;\n        /** @type {?} */\n        let indexToHide;\n        /** @type {?} */\n        let indexToShow;\n        if (this.noWrap) {\n            firstVisibleIndex = this.getFirstVisibleIndex();\n            lastVisibleIndex = this.getLastVisibleIndex();\n            indexToHide = direction === Direction.NEXT\n                ? firstVisibleIndex\n                : lastVisibleIndex;\n            indexToShow = direction !== Direction.NEXT\n                ? firstVisibleIndex - 1\n                : !this.isLast(lastVisibleIndex)\n                    ? lastVisibleIndex + 1 : 0;\n            this._slides.get(indexToHide).active = false;\n            this._slides.get(indexToShow).active = true;\n            /** @type {?} */\n            const slidesToReorder = this.mapSlidesAndIndexes().filter((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active));\n            this.makeSlidesConsistent(slidesToReorder);\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n        else {\n            /** @type {?} */\n            let displayedIndex;\n            firstVisibleIndex = this._slidesWithIndexes[0].index;\n            lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n            if (direction === Direction.NEXT) {\n                this._slidesWithIndexes.shift();\n                displayedIndex = this.isLast(lastVisibleIndex)\n                    ? 0\n                    : lastVisibleIndex + 1;\n                this._slidesWithIndexes.push({\n                    index: displayedIndex,\n                    item: this._slides.get(displayedIndex)\n                });\n            }\n            else {\n                this._slidesWithIndexes.pop();\n                displayedIndex = this.isFirst(firstVisibleIndex)\n                    ? this._slides.length - 1\n                    : firstVisibleIndex - 1;\n                this._slidesWithIndexes = [{\n                        index: displayedIndex,\n                        item: this._slides.get(displayedIndex)\n                    }, ...this._slidesWithIndexes];\n            }\n            this.hideSlides();\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this.slideRangeChange.emit(this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index)));\n        }\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveMultilist(direction) {\n        if (this.singleSlideOffset) {\n            this.moveSliderByOneItem(direction);\n        }\n        else {\n            this.hideSlides();\n            if (this.noWrap) {\n                this._currentVisibleSlidesIndex = direction === Direction.NEXT\n                    ? this._currentVisibleSlidesIndex + 1\n                    : this._currentVisibleSlidesIndex - 1;\n            }\n            else {\n                if (direction === Direction.NEXT) {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\n                        ? 0\n                        : this._currentVisibleSlidesIndex + 1;\n                }\n                else {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst()\n                        ? this._chunkedSlides.length - 1\n                        : this._currentVisibleSlidesIndex - 1;\n                }\n            }\n            this._chunkedSlides[this._currentVisibleSlidesIndex].forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getVisibleIndexes() {\n        if (!this.singleSlideOffset) {\n            return this._chunkedSlides[this._currentVisibleSlidesIndex]\n                .map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n        else {\n            return this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n    }\n    /**\n     * Sets a slide, which specified through index, as active\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _select(index) {\n        if (isNaN(index)) {\n            this.pause();\n            return;\n        }\n        if (!this.multilist) {\n            /** @type {?} */\n            const currentSlide = this._slides.get(this._currentActiveSlide);\n            if (currentSlide) {\n                currentSlide.active = false;\n            }\n        }\n        /** @type {?} */\n        const nextSlide = this._slides.get(index);\n        if (nextSlide) {\n            this._currentActiveSlide = index;\n            nextSlide.active = true;\n            this.activeSlide = index;\n            this.activeSlideChange.emit(index);\n        }\n    }\n    /**\n     * Starts loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    restartTimer() {\n        this.resetTimer();\n        /** @type {?} */\n        const interval = +this.interval;\n        if (!isNaN(interval) && interval > 0) {\n            this.currentInterval = this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return setInterval((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const nInterval = +this.interval;\n                    this.ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        if (this.isPlaying &&\n                            !isNaN(this.interval) &&\n                            nInterval > 0 &&\n                            this.slides.length) {\n                            this.nextSlideFromInterval();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }));\n                }), interval);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get multilist() {\n        return this.itemsPerSlide > 1;\n    }\n    /**\n     * Stops loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    resetTimer() {\n        if (this.currentInterval) {\n            clearInterval(this.currentInterval);\n            this.currentInterval = void 0;\n        }\n    }\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [[\"carousel\"]], inputs: { indicatorsByChunk: \"indicatorsByChunk\", itemsPerSlide: \"itemsPerSlide\", singleSlideOffset: \"singleSlideOffset\", isAnimated: \"isAnimated\", startFromIndex: \"startFromIndex\", activeSlide: \"activeSlide\", interval: \"interval\", noWrap: \"noWrap\", noPause: \"noPause\", showIndicators: \"showIndicators\", pauseOnFocus: \"pauseOnFocus\" }, outputs: { activeSlideChange: \"activeSlideChange\", slideRangeChange: \"slideRangeChange\" }, ngContentSelectors: _c1, decls: 6, vars: 6, consts: [[\"tabindex\", \"0\", 1, \"carousel\", \"slide\", 3, \"mouseenter\", \"mouseleave\", \"mouseup\", \"keydown\", \"focusin\", \"focusout\"], [\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\", 3, \"ngStyle\"], [\"class\", \"left carousel-control carousel-control-prev\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"right carousel-control carousel-control-next\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"left\", \"carousel-control\", \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-prev\", \"carousel-control-prev-icon\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"right\", \"carousel-control\", \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-next\", \"carousel-control-next-icon\"]], template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function CarouselComponent_Template_div_mouseenter_0_listener() { return ctx.pause(); })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() { return ctx.onMouseLeave(); })(\"mouseup\", function CarouselComponent_Template_div_mouseup_0_listener() { return ctx.onMouseUp(); })(\"keydown\", function CarouselComponent_Template_div_keydown_0_listener($event) { return ctx.keydownPress($event); })(\"focusin\", function CarouselComponent_Template_div_focusin_0_listener() { return ctx.pauseFocusIn(); })(\"focusout\", function CarouselComponent_Template_div_focusout_0_listener() { return ctx.pauseFocusOut(); });\n        ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_Template, 2, 1, \"ol\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, CarouselComponent_a_4_Template, 3, 3, \"a\", 3);\n        ɵngcc0.ɵɵtemplate(5, CarouselComponent_a_5_Template, 4, 2, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showIndicators && ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx.multilist ? \"flex\" : \"block\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf], encapsulation: 2 });\n/** @nocollapse */\nCarouselComponent.ctorParameters = () => [\n    { type: CarouselConfig },\n    { type: NgZone }\n];\nCarouselComponent.propDecorators = {\n    noWrap: [{ type: Input }],\n    noPause: [{ type: Input }],\n    showIndicators: [{ type: Input }],\n    pauseOnFocus: [{ type: Input }],\n    indicatorsByChunk: [{ type: Input }],\n    itemsPerSlide: [{ type: Input }],\n    singleSlideOffset: [{ type: Input }],\n    isAnimated: [{ type: Input }],\n    activeSlideChange: [{ type: Output }],\n    slideRangeChange: [{ type: Output }],\n    activeSlide: [{ type: Input }],\n    startFromIndex: [{ type: Input }],\n    interval: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n        type: Component,\n        args: [{\n                selector: 'carousel',\n                template: \"<div (mouseenter)=\\\"pause()\\\"\\n     (mouseleave)=\\\"onMouseLeave()\\\"\\n     (mouseup)=\\\"onMouseUp()\\\"\\n     (keydown)=\\\"keydownPress($event)\\\"\\n     (focusin)=\\\"pauseFocusIn()\\\"\\n     (focusout)=\\\"pauseFocusOut()\\\"\\n     class=\\\"carousel slide\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slide of indicatorsSlides(); let i = index;\\\"\\n        [class.active]=\\\"slide.active === true\\\"\\n        (click)=\\\"selectSlide(i)\\\">\\n    </li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\"\\n     [class.disabled]=\\\"activeSlide === 0 && noWrap\\\"\\n     (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\"\\n     [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"\\n     (click)=\\\"nextSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: CarouselConfig }, { type: ɵngcc0.NgZone }]; }, { indicatorsByChunk: [{\n            type: Input\n        }], itemsPerSlide: [{\n            type: Input\n        }], singleSlideOffset: [{\n            type: Input\n        }], isAnimated: [{\n            type: Input\n        }], activeSlideChange: [{\n            type: Output\n        }], slideRangeChange: [{\n            type: Output\n        }], startFromIndex: [{\n            type: Input\n        }], activeSlide: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], noWrap: [{\n            type: Input\n        }], noPause: [{\n            type: Input\n        }], showIndicators: [{\n            type: Input\n        }], pauseOnFocus: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CarouselComponent.prototype.noWrap;\n    /** @type {?} */\n    CarouselComponent.prototype.noPause;\n    /** @type {?} */\n    CarouselComponent.prototype.showIndicators;\n    /** @type {?} */\n    CarouselComponent.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselComponent.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselComponent.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselComponent.prototype.singleSlideOffset;\n    /**\n     * Turn on/off animation. Animation doesn't work for multilist carousel\n     * @type {?}\n     */\n    CarouselComponent.prototype.isAnimated;\n    /**\n     * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n     * @type {?}\n     */\n    CarouselComponent.prototype.activeSlideChange;\n    /**\n     * Will be emitted when active slides has been changed in multilist mode\n     * @type {?}\n     */\n    CarouselComponent.prototype.slideRangeChange;\n    /** @type {?} */\n    CarouselComponent.prototype.startFromIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.currentInterval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentActiveSlide;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._interval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._chunkedSlides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slidesWithIndexes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentVisibleSlidesIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.isPlaying;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.destroyed;\n    /** @type {?} */\n    CarouselComponent.prototype.getActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.makeSlidesConsistent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlideComponent {\n    /**\n     * @param {?} carousel\n     */\n    constructor(carousel) {\n        this.itemWidth = '100%';\n        this.order = 0;\n        /**\n         * Wraps element by appropriate CSS classes\n         */\n        this.addClass = true;\n        this.carousel = carousel;\n    }\n    /**\n     * Fires changes in container collection after adding a new slide instance\n     * @return {?}\n     */\n    ngOnInit() {\n        this.carousel.addSlide(this);\n        this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n    }\n    /**\n     * Fires changes in container collection after removing of this slide instance\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.carousel.removeSlide(this);\n    }\n}\nSlideComponent.ɵfac = function SlideComponent_Factory(t) { return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselComponent)); };\nSlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideComponent, selectors: [[\"slide\"]], hostVars: 13, hostBindings: function SlideComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", !ctx.active);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.itemWidth)(\"order\", ctx.order);\n        ɵngcc0.ɵɵclassProp(\"item\", ctx.addClass)(\"carousel-item\", ctx.addClass)(\"active\", ctx.active)(\"carousel-animation\", ctx.isAnimated);\n    } }, inputs: { active: \"active\" }, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[1, \"item\"]], template: function SlideComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.active);\n    } }, styles: [\".carousel-animation[_nghost-%COMP%] {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    .carousel-animation.active[_nghost-%COMP%] {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    .carousel-animation[_nghost-%COMP%]:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\"] });\n/** @nocollapse */\nSlideComponent.ctorParameters = () => [\n    { type: CarouselComponent }\n];\nSlideComponent.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\n    itemWidth: [{ type: HostBinding, args: ['style.width',] }],\n    order: [{ type: HostBinding, args: ['style.order',] }],\n    isAnimated: [{ type: HostBinding, args: ['class.carousel-animation',] }],\n    addClass: [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideComponent, [{\n        type: Component,\n        args: [{\n                selector: 'slide',\n                template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                host: {\n                    '[attr.aria-hidden]': '!active'\n                },\n                styles: [`\n    :host.carousel-animation {\n       transition: opacity 0.6s ease, visibility 0.6s ease;\n       float: left;\n    }\n    :host.carousel-animation.active {\n      opacity: 1;\n      visibility: visible;\n    }\n    :host.carousel-animation:not(.active) {\n      display: block;\n      position: absolute;\n      opacity: 0;\n      visibility: hidden;\n    }\n  `]\n            }]\n    }], function () { return [{ type: CarouselComponent }]; }, { itemWidth: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], order: [{\n            type: HostBinding,\n            args: ['style.order']\n        }], addClass: [{\n            type: HostBinding,\n            args: ['class.item']\n        }, {\n            type: HostBinding,\n            args: ['class.carousel-item']\n        }], active: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: Input\n        }], isAnimated: [{\n            type: HostBinding,\n            args: ['class.carousel-animation']\n        }] }); })();\nif (false) {\n    /**\n     * Is current slide active\n     * @type {?}\n     */\n    SlideComponent.prototype.active;\n    /** @type {?} */\n    SlideComponent.prototype.itemWidth;\n    /** @type {?} */\n    SlideComponent.prototype.order;\n    /** @type {?} */\n    SlideComponent.prototype.isAnimated;\n    /**\n     * Wraps element by appropriate CSS classes\n     * @type {?}\n     */\n    SlideComponent.prototype.addClass;\n    /**\n     * Link to Parent(container-collection) component\n     * @type {?}\n     * @protected\n     */\n    SlideComponent.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: CarouselModule, providers: [] };\n    }\n}\nCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });\nCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CarouselModule_Factory(t) { return new (t || CarouselModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [SlideComponent,\n        CarouselComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SlideComponent,\n        CarouselComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [SlideComponent, CarouselComponent],\n                exports: [SlideComponent, CarouselComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };\n\n//# sourceMappingURL=ngx-bootstrap-carousel.js.map"]}