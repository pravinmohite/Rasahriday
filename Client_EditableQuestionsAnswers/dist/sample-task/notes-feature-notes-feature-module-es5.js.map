{"version":3,"sources":["webpack:///src/app/notes-feature/edit-notes-component/edit-notes-component.component.ts","webpack:///src/app/notes-feature/edit-notes-component/edit-notes-component.component.html","webpack:///src/app/notes-feature/notes-component/notes-component.component.ts","webpack:///src/app/notes-feature/notes-component/notes-component.component.html","webpack:///src/app/notes-feature/notes-feature-routing.module.ts","webpack:///src/app/notes-feature/notes-feature.module.ts","webpack:///src/app/notes-feature/notes-root/notes-root.component.ts","webpack:///src/app/notes-feature/notes-root/notes-root.component.html","webpack:///src/app/notes-feature/sort-by-title/sort-by-title.component.ts","webpack:///src/app/notes-feature/sort-by-title/sort-by-title.component.html"],"names":["EditNotesComponentComponent","itemToBeEdited","note","onSaveEditedItem","editedItemDetails","Object","assign","list","index","emit","saveEditedItem","selector","templateUrl","styleUrls","NotesComponentComponent","currentNote","showModal","newNote","event","key","push","id","Math","random","currentItemToBeEdited","splice","vote","routes","path","component","NotesFeatureRoutingModule","forChild","declarations","imports","exports","NotesFeatureModule","providers","NotesRootComponent","dataService","title","editedItem","currentData","subscribe","data","noteTypes","SortByTitleComponent","sortByTitle","sortData","sortByParams"],"mappings":"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","file":"notes-feature-notes-feature-module-es5.js","sourcesContent":["import { Component, OnInit, Input, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-notes-component',\r\n  templateUrl: './edit-notes-component.component.html',\r\n  styleUrls: ['./edit-notes-component.component.scss']\r\n})\r\nexport class EditNotesComponentComponent {\r\n  itemToBeEdited:any={note:\"\"};\r\n  constructor() { }\r\n  @Input() editedItemDetails:any;\r\n  @Output() onSaveEditedItem:EventEmitter<any>=new EventEmitter<any>();\r\n  \r\n  ngOnInit() {\r\n    if(this.editedItemDetails)\r\n     this.itemToBeEdited=Object.assign({},this.editedItemDetails.list[this.editedItemDetails.index]);\r\n  }\r\n  saveEditedItem() {\r\n    this.editedItemDetails.list[this.editedItemDetails.index]=this.itemToBeEdited;\r\n    this.onSaveEditedItem.emit();\r\n  }\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content\"> \r\n       <textarea class=\"edit-notes\" [(ngModel)]=\"itemToBeEdited.note\"></textarea>\r\n       <div class=\"save-btn-container\">\r\n            <button class=\"save-btn\" (click)=\"saveEditedItem()\">Save</button>\r\n       </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notes-component',\r\n  templateUrl: './notes-component.component.html',\r\n  styleUrls: ['./notes-component.component.scss']\r\n})\r\nexport class NotesComponentComponent implements OnInit {\r\n  currentNote:any={note:\"\"}\r\n  showModal:boolean=false;\r\n  currentItemToBeEdited:any;\r\n  constructor() { }\r\n  @Input() noteTypes:any;\r\n  newNote:boolean=false;\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  saveContent(list,event) {\r\n    if(event.key==\"Enter\") {\r\n      list.push({id:Math.random(),note:this.currentNote.note});\r\n      this.newNote=false;\r\n      this.currentNote.note=\"\";\r\n    } \r\n  }\r\n\r\n  editItem(list,index) {\r\n    this.showModal=true;\r\n    this.currentItemToBeEdited={list,index};\r\n  }\r\n\r\n  addItem(index) {\r\n    this.newNote=true;\r\n    this.currentNote.index=index;\r\n  }\r\n\r\n  removeItem(list,index) {\r\n    list.splice(index,1);\r\n  }\r\n\r\n  voteItem(list,index) {\r\n    list[index].vote++;\r\n  }\r\n  public saveEditedItem(editedItemDetails) {\r\n    this.showModal=false;\r\n   }\r\n}\r\n","    <div class=\"note-type-container\">\r\n      <div class=\"what-wentwell-container items\" *ngFor=\"let noteTypeItems of noteTypes;let i=index\">\r\n            <h2>{{noteTypeItems.title}}</h2>\r\n           <button class=\"hand-cursor\" (click)=\"addItem(i)\">+</button>\r\n            <div class=\"list-container\">\r\n              <div class=\"notes-container\" class=\"notes-container\" *ngFor=\"let noteType of noteTypeItems.notesList;let j=index;\" >\r\n                <div>{{noteType.note}}</div> \r\n                <div class=\"action-btns\">\r\n                  <button class=\"vote-btn\" (click)=\"voteItem(noteTypeItems.notesList,j)\">Vote {{noteType.vote}}</button>\r\n                  <button class=\"delete-btn\" (click)=\"removeItem(noteTypeItems.notesList,j)\" >x</button>\r\n                  <button class=\"edit-btn\" (click)=\"editItem(noteTypeItems.notesList,j)\">Edit</button>\r\n                </div>\r\n              </div>\r\n              <textarea class=\"notes-container\" *ngIf=\"newNote && i==currentNote.index\" [(ngModel)]=\"currentNote.note\"  #whatWentWellElem (keydown)=\"saveContent(noteTypeItems.notesList,$event)\"></textarea>\r\n            </div>\r\n          </div> \r\n         <app-edit-notes-component *ngIf=\"showModal\"(onSaveEditedItem)=\"saveEditedItem($event)\" [editedItemDetails]=\"currentItemToBeEdited\"></app-edit-notes-component> \r\n    </div>      ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { NotesRootComponent } from './notes-root/notes-root.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotesRootComponent\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class NotesFeatureRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotesRootComponent } from './notes-root/notes-root.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { EditNotesComponentComponent } from './edit-notes-component/edit-notes-component.component';\r\nimport { NotesComponentComponent } from './notes-component/notes-component.component';\r\nimport { SortByTitleComponent } from './sort-by-title/sort-by-title.component';\r\nimport { DataService } from '../services/data.service';\r\nimport { NotesFeatureRoutingModule } from './notes-feature-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NotesFeatureRoutingModule\r\n  ],\r\n  declarations: [\r\n    NotesRootComponent,\r\n    EditNotesComponentComponent,\r\n    NotesComponentComponent,\r\n    SortByTitleComponent\r\n  ],\r\n  providers: [DataService]\r\n})\r\nexport class NotesFeatureModule { }\r\n","import { Component,OnInit,ElementRef,ViewChildren,QueryList,ViewChild, AfterViewInit, DoCheck, OnChanges } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-notes-root',\r\n  templateUrl: './notes-root.component.html',\r\n  styleUrls: ['./notes-root.component.scss']\r\n})\r\nexport class NotesRootComponent implements DoCheck {\r\n  title = 'sample-task';\r\n  editedItem:any={};\r\n  showModal:boolean=false;\r\n  @ViewChildren ('whatWentWellElem') whatWentWellElem: QueryList<ElementRef>;\r\n  @ViewChildren ('whatCanBeImprovedElem') whatCanBeImprovedElem: QueryList<ElementRef>;\r\n  @ViewChildren ('startDoingElem') startDoingElem: QueryList<ElementRef>;\r\n  @ViewChildren ('actionItemsElem') actionItemsElem: QueryList<ElementRef>;\r\n  \r\n/*-------------new vars----------------*/\r\n  noteTypes:any;\r\n\r\n  constructor(private dataService:DataService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataService.currentData.subscribe(data=>{\r\n      this.noteTypes=data\r\n    });\r\n  }\r\n  ngDoCheck() {\r\n  /*  \r\n    if(this.whatWentWellElem) {\r\n      this.whatWentWellElem.changes.subscribe(()=>\r\n      { \r\n        if(this.whatWentWellElem.first)\r\n          this.whatWentWellElem.first.nativeElement.focus();\r\n      })\r\n    }\r\n    if(this.whatCanBeImprovedElem) {\r\n      this.whatCanBeImprovedElem.changes.subscribe(()=>\r\n      {\r\n        if(this.whatCanBeImprovedElem.first)\r\n          this.whatCanBeImprovedElem.first.nativeElement.focus();\r\n      })\r\n    }  \r\n    if(this.startDoingElem) {\r\n      this.startDoingElem.changes.subscribe(()=>\r\n      {\r\n        if(this.startDoingElem.first)\r\n          this.startDoingElem.first.nativeElement.focus();\r\n      })\r\n    }  \r\n    if(this.actionItemsElem) {\r\n      this.actionItemsElem.changes.subscribe(()=>\r\n      {\r\n        if(this.actionItemsElem.first)\r\n         this.actionItemsElem.first.nativeElement.focus();\r\n      })\r\n    }  */\r\n  }\r\n}\r\n","<h1 class=\"heading\">Retrospective</h1>\r\n<div class=\"main-container\">\r\n   <app-sort-by-title></app-sort-by-title>\r\n   <app-notes-component [noteTypes]=\"noteTypes\"></app-notes-component>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-sort-by-title',\r\n  templateUrl: './sort-by-title.component.html',\r\n  styleUrls: ['./sort-by-title.component.scss']\r\n})\r\nexport class SortByTitleComponent implements OnInit {\r\n  sortByTitle:string=\"default\";\r\n\r\n  constructor(private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  sortByParams() {\r\n    this.dataService.sortData(this.sortByTitle);\r\n  }\r\n}\r\n","<select class=\"hand-cursor\" [(ngModel)]=\"sortByTitle\" (change)=\"sortByParams()\">\r\n <option value=\"default\">Default</option>\r\n <option value=\"title\">Title</option>\r\n</select> "]}