{"version":3,"sources":["webpack:///src/app/admin-panel/admin-panel-routing.module.ts","webpack:///src/app/admin-panel/admin-panel.module.ts","webpack:///src/app/admin-panel/interview-questions-panel/interview-questions-panel.component.ts","webpack:///src/app/admin-panel/interview-questions-panel/interview-questions-panel.component.html","webpack:///src/app/admin-panel/login/login.component.ts","webpack:///src/app/admin-panel/login/login.component.html","webpack:///src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.ts","webpack:///src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.html","webpack:///src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.ts","webpack:///src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.html","webpack:///src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.ts","webpack:///src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.html","webpack:///src/app/interview-questions/angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component.ts","webpack:///src/app/interview-questions/angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component.html","webpack:///src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.ts","webpack:///src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.html","webpack:///src/app/interview-questions/interview-questions-routing.module.ts","webpack:///src/app/interview-questions/interview-questions.module.ts","webpack:///src/app/services/address/address.service.ts"],"names":["routes","path","component","AdminPanelRoutingModule","forChild","declarations","imports","AdminPanelModule","InterviewQuestionsPanelComponent","questionAnswerService","router","loaderService","localStorage","getItem","currentData","subscribe","data","questionAnswerList","display","getQuestionAnswerList","navigateByUrl","selector","templateUrl","styleUrls","LoginComponent","productService","commonService","addressService","cdr","isSignUpMode","faArrowRight","login","username","password","regNumber","firstName","lastName","isPractitioner","states","getStateList","form","signUpUser","validateLoginDetails","event","checkbox","target","checked","setItem","setLoggedInUserDetails","removeItem","removeUserDetails","alert","userDetails","formattedUserDetails","userName","middleName","address","city","state","pincode","phoneNumber","isAdmin","_id","setUserDetails","setPrivilegesOfUser","keyCode","charCode","char","String","fromCharCode","test","preventDefault","keyPressEvent","loginToApplication","AddEditInterviewQuestionsComponent","interviewQuestion","question","answer","rank","editMode","popupEvent","Object","keys","editedItem","length","constructor","JSON","parse","stringify","getQuestionTypes","response","questionTypes","emit","updateQuestionAnswer","addQuestionAnswer","closeAddEditPopup","saveInterviewQuestionAnswer","AddEditQuestionTypesComponent","questionType","faTrash","faEdit","updateQuestionType","addQuestionType","id","result","confirmAction","deleteQuestionType","item","saveQuestionType","AngularInterviewQuestionsComponent","AffiliateAdsComponent","QuestionAnswerPanelComponent","route","showQuestionAnswerModal","showQuestionTypeModal","paramMap","params","searchKey","get","setUrlSearchVal","questionAnswerItem","showAnswer","buttonText","deleteQuestionAnswer","InterviewQuestionsRoutingModule","InterviewQuestionsModule","exports","AddressService","stateList","providedIn"],"mappings":"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","file":"admin-panel-admin-panel-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { InterviewQuestionsPanelComponent } from './interview-questions-panel/interview-questions-panel.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:LoginComponent\r\n  },\r\n  {\r\n    path: 'updateInterviewQuestions',\r\n    component: InterviewQuestionsPanelComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminPanelRoutingModule } from './admin-panel-routing.module';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { InterviewQuestionsModule } from '../interview-questions/interview-questions.module';\r\nimport { InterviewQuestionsPanelComponent } from './interview-questions-panel/interview-questions-panel.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  InterviewQuestionsPanelComponent,\r\n  LoginComponent\r\n ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AdminPanelRoutingModule,\r\n    FontAwesomeModule,\r\n    InterviewQuestionsModule\r\n  ],\r\n})\r\nexport class AdminPanelModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {QuestionAnswerService} from '../../services/question-answer-service/question-answer.service';\r\nimport { Router } from '@angular/router';\r\nimport {LoaderService} from './../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-interview-questions-panel',\r\n  templateUrl: './interview-questions-panel.component.html',\r\n  styleUrls: ['./interview-questions-panel.component.scss']\r\n})\r\nexport class InterviewQuestionsPanelComponent implements OnInit {\r\n\r\n  questionAnswerList:any;\r\n  constructor(private questionAnswerService:QuestionAnswerService,private router:Router,private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn')==\"true\") {\r\n      this.questionAnswerService.currentData.subscribe((data)=>{\r\n      this.questionAnswerList=data;\r\n      this.loaderService.display(false);\r\n     })\r\n     this.questionAnswerService.getQuestionAnswerList();\r\n   }\r\n   else {\r\n     this.router.navigateByUrl('/admin-panel');\r\n   }\r\n  }\r\n}\r\n","<app-question-answer-panel [questionAnswerList]=\"questionAnswerList\" [adminMode]=true></app-question-answer-panel>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {QuestionAnswerService} from '../../services/question-answer-service/question-answer.service';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product-service/product.service';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { CommonService } from 'src/app/services/common-service/common.service';\r\nimport { AddressService } from 'src/app/services/address/address.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isSignUpMode = false;\r\n  faArrowRight = faArrowRight;\r\n  public isPractitioner: boolean;\r\n  login:any={username: \"\", password: \"\", regNumber: \"\", firstName: \"\", lastName: \"\" , isPractitioner: false};\r\n  public states = [];\r\n\r\n  constructor(\r\n    private productService :ProductService,\r\n    private commonService: CommonService,\r\n    private router:Router,\r\n    private addressService: AddressService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.states = this.addressService.getStateList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn')==\"true\") {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  \r\n  loginToApplication(form:any) {\r\n    if (this.isSignUpMode && this.login.isPractitioner && !this.login.regNumber) {\r\n   \r\n      return;\r\n    }\r\n    if(this.isSignUpMode) {\r\n       this.signUpUser();\r\n    }\r\n    else {\r\n       this.validateLoginDetails();\r\n    }\r\n  }\r\n\r\n  signUpUser() {\r\n     this.productService.signUpUser(this.login).subscribe(data=>{\r\n        \r\n        this.validateLoginDetails();\r\n     })\r\n  }\r\n  updatePractitionerStatus(event: Event) {\r\n    const checkbox = event.target as HTMLInputElement;\r\n    this.login.isPractitioner = checkbox.checked;\r\n  }\r\n  \r\n  setPrivilegesOfUser(data) {\r\n    if(data['isAdmin']) {\r\n      localStorage.setItem('loggedIn','true');\r\n      localStorage.setItem('isAdmin','true');\r\n      this.setLoggedInUserDetails(data);\r\n      this.router.navigateByUrl('/home');\r\n   }\r\n   else if(data) {\r\n     localStorage.setItem('loggedIn','true');\r\n     localStorage.setItem('isAdmin','false');\r\n     this.setLoggedInUserDetails(data);\r\n     this.router.navigateByUrl('/home');\r\n   }\r\n   else {\r\n     localStorage.removeItem('loggedIn');\r\n     localStorage.removeItem('isAdmin');\r\n     this.removeUserDetails();\r\n     alert('invalid user, please enter correct username or password');\r\n   }\r\n  }\r\n\r\n  removeUserDetails(){\r\n    this.commonService.removeUserDetails();\r\n  }\r\n \r\n  setLoggedInUserDetails(userDetails) {\r\n    const formattedUserDetails ={\r\n      userName: userDetails.username,\r\n      firstName: userDetails.firstName, //new\r\n      middleName: userDetails.middleName, //new\r\n      lastName: userDetails.lastName, //new\r\n      address: userDetails.address,\r\n      city: userDetails.city,\r\n      state: userDetails.state,\r\n      pincode: userDetails.pincode,\r\n      isPractitioner: userDetails.isPractitioner,\r\n      regNumber: userDetails.regNumber,\r\n      phoneNumber: userDetails.phoneNumber,\r\n      isAdmin: userDetails.isAdmin,\r\n      _id: userDetails._id\r\n    }\r\n    this.commonService.setUserDetails(formattedUserDetails);\r\n  }\r\n\r\n  validateLoginDetails() {\r\n    this.productService.validateLoginDetails(this.login).subscribe(data=>{\r\n       if(data && data['invalidUser']) {\r\n         alert('incorrect credentials');\r\n       }\r\n       else {\r\n         this.setPrivilegesOfUser(data);\r\n       }\r\n     })\r\n  }\r\n\r\n  keyPressEvent(event) {\r\n    if(event.keyCode==13) {\r\n      this.validateLoginDetails();\r\n    }\r\n  }\r\n  keyPressEventForCharacter(event: KeyboardEvent): void {\r\n    const charCode = event.charCode || event.keyCode;\r\n    const char = String.fromCharCode(charCode);\r\n\r\n    if (!/^[a-zA-Z]*$/.test(char) && charCode !== 8) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  setSignUpMode() {\r\n    this.isSignUpMode = true;\r\n  }\r\n\r\n  setLoginMode() {\r\n    this.isSignUpMode = false;\r\n  }\r\n}\r\n","<div class=\"login-panel-container\" [ngClass]=\"{registrationBox:isSignUpMode}\">\r\n\r\n    <form #userForm=\"ngForm\" novalidate>\r\n        <legend class=\"login-register\" *ngIf=\"!isSignUpMode\">Login:</legend>\r\n        <legend class=\"login-register\" *ngIf=\"isSignUpMode\">Register:</legend>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Practitioner?</label>\r\n            <div class=\"col-9\">\r\n                <!-- this event is removed, (onchange)=\"login.isPractitioner = !login.isPractitioner\" -->\r\n                <input name=\"isPractitioner\" [(ngModel)]=\"login.isPractitioner\" (change)=\"updatePractitionerStatus($event)\"  type=\"checkbox\"\r\n                    class=\"form-control justify-content-start practicener-checkbox\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode && login.isPractitioner\">\r\n            <label for=\"username\" class=\"col-3 col-form-label required\">Registration Number</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"regNumber\" name=\"regNumber\" [(ngModel)]=\"login.regNumber\"\r\n                    placeholder=\"Enter your Registration Number\" (keypress)=\"keyPressEvent($event)\" type=\"text\"\r\n                    class=\"form-control\" #regNumber=\"ngModel\"\r\n                    [ngClass]=\"{'is-invalid': regNumber.invalid  && (regNumber.touched || userForm.submitted)}\"\r\n                    [required]=\"login.isPractitioner\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row field-container\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Username</label>\r\n\r\n            <div class=\"col-9\">\r\n                <input id=\"username\" name=\"username\" [(ngModel)]=\"login.username\" placeholder=\"Enter your username\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\">\r\n            <label for=\"password\" class=\"col-3 col-form-label\">Password</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"password\" name=\"password\" [(ngModel)]=\"login.password\" (keypress)=\"keyPressEvent($event)\"\r\n                    placeholder=\"Enter your password\" type=\"password\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"password\" class=\"col-3 col-form-label\">Confirm Password</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"login.confirmPassword\"\r\n                    (keypress)=\"keyPressEvent($event)\" placeholder=\"Enter your password\" type=\"password\"\r\n                    class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <!----------------------------- full name ------------------- -->\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label class=\"col-3 col-form-label required\">Full Name</label>\r\n            <div class=\"col-9 full-name-box\">\r\n\r\n                <div class=\"col-md-4 col-12 firstNameField\">\r\n                    <input id=\"firstName\" name=\"firstName\" [(ngModel)]=\"login.firstName\"\r\n                        (keypress)=\"keyPressEventForCharacter($event)\" placeholder=\"Enter your first name\" type=\"text\"\r\n                        class=\"form-control\" #firstNameInput=\"ngModel\"\r\n                        [ngClass]=\"{'is-invalid': firstNameInput.invalid  && (firstNameInput.touched || userForm.submitted)}\"\r\n                        required>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 firstNameField middleName\">\r\n                    <input id=\"middleName\" name=\"middleName\" [(ngModel)]=\"login.middleName\"\r\n                        (keypress)=\"keyPressEventForCharacter($event)\" placeholder=\"Enter your middle name\" type=\"text\"\r\n                        class=\"form-control\" required=\"required\">\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 firstNameField\">\r\n                    <input id=\"lastName\" name=\"lastName\" [(ngModel)]=\"login.lastName\"\r\n                        (keypress)=\"keyPressEventForCharacter($event)\" placeholder=\"Enter your last name\" type=\"text\"\r\n                        class=\"form-control\" required=\"required\" #lastNameInput=\"ngModel\"\r\n                        [ngClass]=\"{'is-invalid': lastNameInput.invalid && (lastNameInput.touched || userForm.submitted)}\"\r\n                        required>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Phone Number</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"phoneNumber\" name=\"phoneNumber\" [(ngModel)]=\"login.phoneNumber\"\r\n                    placeholder=\"Enter your Phone Number\" (keypress)=\"keyPressEvent($event)\" type=\"text\"\r\n                    class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Address</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"address\" name=\"address\" [(ngModel)]=\"login.address\" placeholder=\"Enter your address\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">City</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"city\" name=\"city\" [(ngModel)]=\"login.city\" placeholder=\"Enter your City\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">State</label>\r\n            <div class=\"col-9\">\r\n                <select [(ngModel)]=\"login.state\" aria-placeholder=\"Select State\" (onchange)=\"keyPressEvent($event)\"\r\n                    class=\"form-control\" required=\"required\">\r\n                    <option *ngFor=\"let state of states\" [value]=\"state?.label\">{{state?.label}}</option>\r\n                </select>\r\n                <!-- <input id=\"state\" name=\"state\" [(ngModel)]=\"login.state\" placeholder=\"Enter your state\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\"> -->\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row field-container\" *ngIf=\"isSignUpMode\">\r\n            <label for=\"username\" class=\"col-3 col-form-label\">Pincode</label>\r\n            <div class=\"col-9\">\r\n                <input id=\"pincode\" name=\"pincode\" [(ngModel)]=\"login.pincode\" placeholder=\"Enter your Pincode\"\r\n                    (keypress)=\"keyPressEvent($event)\" type=\"text\" class=\"form-control\" required=\"required\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n            <div class=\"offset-3 col-9 action-btns\">\r\n                <button name=\"submit\" type=\"submit\" class=\"btn btn-outline-customsecondary submit-btn\"\r\n                    (click)=\"loginToApplication(userForm)\">Submit</button>\r\n                <button *ngIf=\"!isSignUpMode\" class=\"btn btn-outline login-btn\"\r\n                    (click)=\"setSignUpMode()\">Register</button>\r\n                <button *ngIf=\"isSignUpMode\" class=\"btn btn-outline login-btn\" (click)=\"setLoginMode()\">Login</button>\r\n                <!-- <a class=\"switch-mode\" *ngIf=\"!isSignUpMode\" href=\"javascript:void(0)\" (click)=\"setSignUpMode()\">Register <fa-icon class=\"hand-cursor edit-icon arrowright-icon\" [icon]=\"faArrowRight\"></fa-icon></a>\r\n            <a class=\"switch-mode\" *ngIf=\"isSignUpMode\" href=\"javascript:void(0)\" (click)=\"setLoginMode()\">Login <fa-icon class=\"hand-cursor edit-icon arrowright-icon\" [icon]=\"faArrowRight\"></fa-icon></a> -->\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n\r\n\r\n<i class=\"fa-light fa-arrow-right\"></i>\r\n\r\n\r\n","import { Component, Input, OnInit, Output } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\nimport {QuestionAnswerService} from \"../../../services/question-answer-service/question-answer.service\";\r\nimport {LoaderService} from './../../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-interview-questions',\r\n  templateUrl: './add-edit-interview-questions.component.html',\r\n  styleUrls: ['./add-edit-interview-questions.component.scss']\r\n})\r\nexport class AddEditInterviewQuestionsComponent implements OnInit {\r\n\r\n  questionTypes:any;\r\n  interviewQuestion:any={question:'',answer:'',rank:''};\r\n  @Input() editedItem;\r\n  editMode:Boolean=true;\r\n  @Output() popupEvent=new EventEmitter();\r\n  constructor(private questionAnswerService:QuestionAnswerService,private loaderService:LoaderService) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(Object.keys(this.editedItem).length === 0 && this.editedItem.constructor === Object) \r\n      this.editMode=false;\r\n    this.interviewQuestion=JSON.parse(JSON.stringify(this.editedItem));\r\n    this.getQuestionTypes();\r\n  }\r\n  getQuestionTypes(){\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(response=>{\r\n      this.questionTypes=response;\r\n      this.loaderService.display(false);\r\n    });\r\n  }\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionAnswerPopup');\r\n  }\r\n  saveInterviewQuestionAnswer() {\r\n    if(this.editMode) {\r\n      this.questionAnswerService.updateQuestionAnswer(this.interviewQuestion);\r\n    }\r\n    else {\r\n      this.questionAnswerService.addQuestionAnswer(this.interviewQuestion);\r\n    }\r\n    this.closeAddEditPopup();\r\n  }\r\n\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content\"> \r\n        <div>\r\n         <fieldset>\r\n          <legend>Add question and answer:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-3 col-form-label\">Question</label> \r\n            <div class=\"col-9\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.question\" placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"answer\" class=\"col-3 col-form-label\">Answer</label> \r\n            <div class=\"col-9\">\r\n              <textarea id=\"answer\" [(ngModel)]=\"interviewQuestion.answer\" placeholder=\"Enter Answer\" name=\"answer\" cols=\"40\" rows=\"5\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>\r\n        \r\n        <div class=\"form-group row\">\r\n            <label for=\"type\" class=\"col-3 col-form-label\">Type</label> \r\n            <div class=\"col-9\">\r\n            <select id=\"type\" name=\"type\" class=\"custom-select\" [(ngModel)]=\"interviewQuestion.questionType\">\r\n                <option *ngFor=\"let item of questionTypes\" [value]=\"item.questionType\">{{item.questionType}}</option>\r\n            </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label for=\"text\" class=\"col-3 col-form-label\">Rank</label> \r\n            <div class=\"col-9\">\r\n            <input id=\"text\" [(ngModel)]=\"interviewQuestion.rank\" name=\"text\" placeholder=\"Enter Rank\" type=\"number\" class=\"form-control\">\r\n            </div>\r\n        </div> \r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-3 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\" (click)=\"saveInterviewQuestionAnswer()\">Submit</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n             <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\" class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n         </fieldset> \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {LoaderService} from './../../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-question-types',\r\n  templateUrl: './add-edit-question-types.component.html',\r\n  styleUrls: ['./add-edit-question-types.component.scss']\r\n})\r\nexport class AddEditQuestionTypesComponent implements OnInit {\r\n\r\n  @Output() popupEvent=new EventEmitter();\r\n  interviewQuestion:any={questionType:\"\"};\r\n  questionTypes:any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  editMode=false;\r\n  constructor(private questionAnswerService:QuestionAnswerService,private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuestionTypes();\r\n  }\r\n\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(data=>{\r\n      this.questionTypes=data;\r\n      this.loaderService.display(false);\r\n    })\r\n  }\r\n\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionTypesPopup');\r\n  }\r\n\r\n  saveQuestionType() {\r\n    this.loaderService.display(true);\r\n    if(this.editMode) {\r\n      this.questionAnswerService.updateQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.editMode=false;\r\n        this.loaderService.display(false);\r\n      })\r\n    }\r\n    else {\r\n      this.questionAnswerService.addQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.loaderService.display(false);\r\n      })\r\n   }\r\n  }\r\n\r\n  deleteQuestionType(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.deleteQuestionType(id).subscribe(data=>{\r\n      this.getQuestionTypes();\r\n      this.loaderService.display(false);\r\n    })\r\n   }\r\n  }\r\n\r\n  editQuestionType(item){\r\n    this.interviewQuestion=JSON.parse(JSON.stringify(item));\r\n    this.editMode=true;\r\n  }\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content modal-question-types\"> \r\n        <div>\r\n         <fieldset>\r\n          <legend>Add/Edit Question Types:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Question Types</label> \r\n            <div class=\"col-8\">\r\n              <div *ngFor=\"let item of questionTypes\">\r\n                <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editQuestionType(item)\"></fa-icon><fa-icon class=\"hand-cursor delete-icon\" [icon]=\"faTrash\" (click)=\"deleteQuestionType(item._id)\"></fa-icon><span class=\"question-type-item\">{{item.questionType}}</span>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Add/Edit Question Type</label> \r\n            <div class=\"col-8\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.questionType\" placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>     \r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-4 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\" (click)=\"saveQuestionType()\">{{editMode==true?'Update':'Submit'}}</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n             <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\" class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n         </fieldset> \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {QuestionAnswerService} from \"../../services/question-answer-service/question-answer.service\";\r\nimport {LoaderService} from './../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-angular-interview-questions',\r\n  templateUrl: './angular-interview-questions.component.html',\r\n  styleUrls: ['./angular-interview-questions.component.scss']\r\n})\r\nexport class AngularInterviewQuestionsComponent implements OnInit {\r\n  questionAnswerList:any;\r\n  constructor(\r\n    private questionAnswerService:QuestionAnswerService,\r\n    private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.questionAnswerService.currentData.subscribe((data)=>{\r\n      this.questionAnswerList=data;\r\n      this.loaderService.display(false);\r\n   })\r\n    this.questionAnswerService.getQuestionAnswerList();\r\n  }\r\n}\r\n","<app-question-answer-panel [questionAnswerList]=\"questionAnswerList\" [adminMode]=\"false\"></app-question-answer-panel>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-affiliate-ads',\r\n  templateUrl: './affiliate-ads.component.html',\r\n  styleUrls: ['./affiliate-ads.component.scss']\r\n})\r\nexport class AffiliateAdsComponent implements OnInit {\r\n\r\n  @Input() index;\r\n  @Input() totalItems;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"index==4\"> \r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B08WBB369L&asins=B08WBB369L&linkId=a7c9c891fe90b0a6b5373540451325df&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&region=IN&placement=B079FB4XK9&asins=B079FB4XK9&linkId=572bd3d3e78b30bc19025f1fc333ea4d&show_border=true&link_opens_in_new_window=true\">\r\n    </iframe>\r\n  </div>\r\n  <div *ngIf=\"index==9\">\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B08XBGZ4R6&asins=B08XBGZ4R6&linkId=a054196073f3e8ff6631c1764858f703&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B092ZJVB6Z&asins=B092ZJVB6Z&linkId=434396edfdf81a24b170c81dd075c9ca&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n  </div>\r\n  <div *ngIf=\"index==14\">\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B08NK3YL8B&asins=B08NK3YL8B&linkId=92757a96eb1ee075e384f1d3fd690256&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&region=IN&placement=B08FJ8YSB8&asins=B08FJ8YSB8&linkId=98b48d35bf3bfd4f4aa78fd324c41c71&show_border=true&link_opens_in_new_window=true\">\r\n    </iframe>\r\n  </div>\r\n  <div *ngIf=\"index+1==totalItems\">\r\n    <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B071Z8M4KX&asins=B071Z8M4KX&linkId=bfcf87ed285ecddbf769819762713bf3&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n      <iframe style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//ws-in.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=IN&source=ac&ref=tf_til&ad_type=product_link&tracking_id=frontend02-21&marketplace=amazon&amp;region=IN&placement=B072X7K4K4&asins=B072X7K4K4&linkId=19af7322756a5d9b77fb2926acaf8767&show_border=true&link_opens_in_new_window=true&price_color=333333&title_color=0066c0&bg_color=ffffff\">\r\n    </iframe>\r\n  </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-question-answer-panel',\r\n  templateUrl: './question-answer-panel.component.html',\r\n  styleUrls: ['./question-answer-panel.component.scss']\r\n})\r\nexport class QuestionAnswerPanelComponent implements OnInit {\r\n  @Input() questionAnswerList;\r\n  @Input() adminMode:boolean;\r\n  showQuestionAnswerModal:Boolean=false;\r\n  showQuestionTypeModal:Boolean=false;\r\n  searchKey: any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  editedItem:any;\r\n  constructor(\r\n    private questionAnswerService:QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      \r\n      this.searchKey = params.get('searchKey');\r\n      this.questionAnswerService.setUrlSearchVal(this.searchKey);\r\n    });\r\n\r\n  }\r\n  toggleShowHideAnswer(questionAnswerItem) {\r\n    if(!questionAnswerItem.showAnswer) {\r\n      questionAnswerItem.showAnswer=true;\r\n      questionAnswerItem.buttonText=\"Hide\"\r\n    }\r\n    else {\r\n     questionAnswerItem.showAnswer=false;\r\n     questionAnswerItem.buttonText=\"Show\"\r\n    }\r\n  }\r\n\r\n  openAddQuestionAnswerPopup() {\r\n    this.showQuestionAnswerModal=true;\r\n    this.editedItem={};\r\n  }\r\n\r\n  openAddQuestionTypePopup(){\r\n    this.showQuestionTypeModal=true;\r\n  }\r\n\r\n  closeModal(event) {\r\n    if(event==\"closeQuestionAnswerPopup\") {\r\n      this.showQuestionAnswerModal=false;\r\n    }\r\n    else {\r\n      this.showQuestionTypeModal=false;\r\n    } \r\n  }\r\n\r\n  deleteQuestionAnswer(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n     this.questionAnswerService.deleteQuestionAnswer(id);\r\n    }\r\n  }\r\n\r\n  editQuestionAnswer(data) {\r\n    this.editedItem=data;\r\n    this.showQuestionAnswerModal=true;\r\n  }\r\n\r\n}\r\n","<article class=\"panel-container\" [ngClass]=\"{'admin-panel':adminMode}\" >\r\n  <b>\r\n    <h2 class=\"page-heading\">Front end interview questions</h2>\r\n    <h3 class=\"display-none\">UI interview questions</h3>\r\n  </b>\r\n   <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <button class=\"col-md-3 col-5 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\" (click)='openAddQuestionAnswerPopup()'>+ Add Q/A</button>\r\n      <button class=\"col-md-3 col-6 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\" (click)='openAddQuestionTypePopup()'>+ Add/Edit Q/A type</button>\r\n    </div> \r\n  </div> \r\n   \r\n  <!-- <span class=\"badge badge-pill badge-secondary\">{{searchKey}}</span> -->\r\n  <div *ngFor=\"let questionAnswerItem of questionAnswerList;let i=index\"> \r\n    <div class=\"panel-item\">\r\n      <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-10 col-md-9\">\r\n            <span>{{i+1}}. <h3 class=\"question-text\" [innerHtml]=\"questionAnswerItem.question\"></h3></span>\r\n          </div>\r\n          <div class=\"col-xl-2 col-md-3 action-btns\">\r\n            <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editQuestionAnswer(questionAnswerItem)\"></fa-icon><fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\" (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\"></fa-icon><button class=\"showHideAnswer hand-cursor btn-show-hide\" (click)=\"toggleShowHideAnswer(questionAnswerItem)\">{{questionAnswerItem.buttonText?questionAnswerItem.buttonText:\"Show\"}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"panel-body\" [ngClass]=\"{'open': questionAnswerItem.showAnswer ==true}\">\r\n        <div class=\"panel-body-content\" [innerHtml]=\"questionAnswerItem.answer\"></div>\r\n      </div>\r\n    </div> \r\n    <div class=\"affiliate-ads-container\">\r\n      <app-affiliate-ads [index]=\"i\" [totalItems]=\"questionAnswerList.length\"></app-affiliate-ads>\r\n    </div>\r\n  </div>  \r\n</article>\r\n<app-add-edit-interview-questions [editedItem]=\"editedItem\" *ngIf=\"showQuestionAnswerModal\" (popupEvent)=\"closeModal($event)\"></app-add-edit-interview-questions>\r\n<app-add-edit-question-types *ngIf=\"showQuestionTypeModal\" (popupEvent)=\"closeModal($event)\"></app-add-edit-question-types>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { AngularInterviewQuestionsComponent } from './angular-interview-questions/angular-interview-questions.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AngularInterviewQuestionsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class InterviewQuestionsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularInterviewQuestionsComponent } from '../interview-questions/angular-interview-questions/angular-interview-questions.component';\r\nimport { InterviewQuestionsRoutingModule } from './interview-questions-routing.module';\r\nimport { QuestionAnswerPanelComponent } from '../interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AddEditInterviewQuestionsComponent } from './angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddEditQuestionTypesComponent } from './angular-interview-questions/add-edit-question-types/add-edit-question-types.component';\r\nimport { AffiliateAdsComponent } from './angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent,\r\n    AddEditInterviewQuestionsComponent,\r\n    AddEditQuestionTypesComponent,\r\n    AffiliateAdsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InterviewQuestionsRoutingModule,\r\n    FontAwesomeModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent\r\n  ]\r\n})\r\nexport class InterviewQuestionsModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  private stateList: Array<any> = [\r\n    { \"value\": \"AN\", \"label\": \"Andaman and Nicobar Islands\" },\r\n    { \"value\": \"AP\", \"label\": \"Andhra Pradesh\" },\r\n    { \"value\": \"AR\", \"label\": \"Arunachal Pradesh\" },\r\n    { \"value\": \"AS\", \"label\": \"Assam\" },\r\n    { \"value\": \"BR\", \"label\": \"Bihar\" },\r\n    { \"value\": \"CG\", \"label\": \"Chandigarh\" },\r\n    { \"value\": \"CH\", \"label\": \"Chhattisgarh\" },\r\n    { \"value\": \"DH\", \"label\": \"Dadra and Nagar Haveli\" },\r\n    { \"value\": \"DD\", \"label\": \"Daman and Diu\" },\r\n    { \"value\": \"DL\", \"label\": \"Delhi\" },\r\n    { \"value\": \"GA\", \"label\": \"Goa\" },\r\n    { \"value\": \"GJ\", \"label\": \"Gujarat\" },\r\n    { \"value\": \"HR\", \"label\": \"Haryana\" },\r\n    { \"value\": \"HP\", \"label\": \"Himachal Pradesh\" },\r\n    { \"value\": \"JK\", \"label\": \"Jammu and Kashmir\" },\r\n    { \"value\": \"JH\", \"label\": \"Jharkhand\" },\r\n    { \"value\": \"KA\", \"label\": \"Karnataka\" },\r\n    { \"value\": \"KL\", \"label\": \"Kerala\" },\r\n    { \"value\": \"LD\", \"label\": \"Lakshadweep\" },\r\n    { \"value\": \"MP\", \"label\": \"Madhya Pradesh\" },\r\n    { \"value\": \"MH\", \"label\": \"Maharashtra\" },\r\n    { \"value\": \"MN\", \"label\": \"Manipur\" },\r\n    { \"value\": \"ML\", \"label\": \"Meghalaya\" },\r\n    { \"value\": \"MZ\", \"label\": \"Mizoram\" },\r\n    { \"value\": \"NL\", \"label\": \"Nagaland\" },\r\n    { \"value\": \"OR\", \"label\": \"Odisha\" },\r\n    { \"value\": \"PY\", \"label\": \"Puducherry\" },\r\n    { \"value\": \"PB\", \"label\": \"Punjab\" },\r\n    { \"value\": \"RJ\", \"label\": \"Rajasthan\" },\r\n    { \"value\": \"SK\", \"label\": \"Sikkim\" },\r\n    { \"value\": \"TN\", \"label\": \"Tamil Nadu\" },\r\n    { \"value\": \"TS\", \"label\": \"Telangana\" },\r\n    { \"value\": \"TR\", \"label\": \"Tripura\" },\r\n    { \"value\": \"UK\", \"label\": \"Uttarakhand\" },\r\n    { \"value\": \"UP\", \"label\": \"Uttar Pradesh\" },\r\n    { \"value\": \"WB\", \"label\": \"West Bengal\" },\r\n  ];\r\n  constructor() { }\r\n\r\n  getStateList (): Array<any> {\r\n    return this.stateList;\r\n  }\r\n}\r\n"]}